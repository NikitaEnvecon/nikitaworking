----------------------------------------------------------------------------
--                                              
--  Filename      : MVAccrul.cre
--
--  Module        : ACCRUL
--
--  Purpose       : Create Materialized views, constraints and indexes for ACCRUL BI Services
--
--  Localization  : No translation needed.
--
--  Date     Sign   History
--  ------   ----   -----------------------------------------------------------
--  110318   Umdolk Created
--  110819   Gadalk BA-1175: Added null handling for ACCOUNTING_PERIOD_MV
--  110923   Anwese  Updated
--  110930   Anwese  Updated constraints and indexes
--  131004   Mohrlk  TIBE-4193, Added CURRENCY_RATE_MV.  
---------------------------------------------------------------------------------------------------------

SET SERVEROUTPUT ON
                                                                            
-- ***** ANALYTIC_ATTR_ACCOUNT_MV - Start *****    
   
DEFINE TAB        = ACCOUNTING_ATTRIBUTE_CON_TAB
DEFINE TAB2       = ACCOUNTING_ATTRIBUTE_TAB
DEFINE TAB3       = ACCOUNTING_ATTRIBUTE_VALUE_TAB
DEFINE MV         = ANALYTIC_ATTR_ACCOUNT_MV
DEFINE CODE_PART  = A

PROMPT Create Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);
   
   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);
   
   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV 
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       AS
       SELECT a.company||''^''||a.code_part_value              id,
              a.code_part_value                                code,
              a.company                                        company,
              a.attribute                                      attribute,
              a2.description                                   attribute_description,
              a.attribute_value                                attribute_value,
              a3.description                                   attribute_value_description
       FROM   &TAB a,
              &TAB2 a2,
              &TAB3 a3
       WHERE  a.code_part        = ''&CODE_PART''
       AND    a2.company         = a.company
       AND    a2.attribute       = a.attribute
       AND    a3.company         = a.company
       AND    a3.attribute       = a.attribute
       AND    a3.attribute_value = a.attribute_value';
      
   EXECUTE IMMEDIATE stmt_;
END;
/
      
PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
BEGIN
   index_name_ := table_name_||'_IX1';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',
                               NULL,
                               TRUE,
                               TRUE);

   Installation_SYS.Reset_Column_Table(columns_);  

   index_name_ := table_name_||'_IX2';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',                               
                               NULL,
                               TRUE,
                               TRUE);

   Installation_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_IX3';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'ATTRIBUTE');
   Database_SYS.Set_Table_Column (columns_ , 'ATTRIBUTE_VALUE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',                               
                               NULL,
                               TRUE,
                               TRUE);  

   Installation_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_IX4';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'CODE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',                               
                               NULL,
                               TRUE,
                               TRUE);
END;
/   

UNDEFINE TAB
UNDEFINE TAB2
UNDEFINE TAB3
UNDEFINE MV
UNDEFINE CODE_PART

-- ***** ANALYTIC_ATTR_ACCOUNT_MV - End *****

-----------------------------------------------------------------------------

-- ***** ANALYTIC_ATTR_CODE_B_MV - Start *****

DEFINE TAB        = ACCOUNTING_ATTRIBUTE_CON_TAB
DEFINE TAB2       = ACCOUNTING_ATTRIBUTE_TAB
DEFINE TAB3       = ACCOUNTING_ATTRIBUTE_VALUE_TAB
DEFINE MV         = ANALYTIC_ATTR_CODE_B_MV
DEFINE CODE_PART  = B 

PROMPT Create Materialized View &MV            
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
BEGIN

   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);
   
   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);
   
   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV 
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       AS
       SELECT a.company||''^''||a.code_part_value              id,
              a.code_part_value                                code,
              a.company                                        company,
              a.attribute                                      attribute,
              a2.description                                   attribute_description,
              a.attribute_value                                attribute_value,
              a3.description                                   attribute_value_description
       FROM   &TAB a,
              &TAB2 a2,
              &TAB3 a3
       WHERE  a.code_part        = ''&CODE_PART''
       AND    a2.company         = a.company
       AND    a2.attribute       = a.attribute
       AND    a3.company         = a.company
       AND    a3.attribute       = a.attribute
       AND    a3.attribute_value = a.attribute_value';
      
      EXECUTE IMMEDIATE stmt_;
END;
/

PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
BEGIN
   index_name_ := table_name_||'_IX1';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',                               
                               NULL,
                               TRUE,
                               TRUE);

   Installation_SYS.Reset_Column_Table(columns_); 

   index_name_ := table_name_||'_IX2';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',                               
                               NULL,
                               TRUE,
                               TRUE);

   Installation_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_IX3';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'ATTRIBUTE');
   Database_SYS.Set_Table_Column (columns_ , 'ATTRIBUTE_VALUE');
   
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',                               
                               NULL,
                               TRUE,
                               TRUE);

   Installation_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_IX4';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'CODE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',                               
                               NULL,
                               TRUE,
                               TRUE);
END;
/   

UNDEFINE TAB
UNDEFINE TAB2
UNDEFINE TAB3
UNDEFINE MV
UNDEFINE CODE_PART  

-- ***** ANALYTIC_ATTR_CODE_B_MV - End *****

-----------------------------------------------------------------------------

-- ***** ANALYTIC_ATTR_CODE_C_MV - Start *****

DEFINE TAB        = ACCOUNTING_ATTRIBUTE_CON_TAB
DEFINE TAB2       = ACCOUNTING_ATTRIBUTE_TAB
DEFINE TAB3       = ACCOUNTING_ATTRIBUTE_VALUE_TAB
DEFINE MV         = ANALYTIC_ATTR_CODE_C_MV
DEFINE CODE_PART  = C

PROMPT Create Materialized View &MV             
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);
   
   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);
   
   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV 
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       AS
       SELECT a.company||''^''||a.code_part_value              id,
              a.code_part_value                                code,
              a.company                                        company,
              a.attribute                                      attribute,
              a2.description                                   attribute_description,
              a.attribute_value                                attribute_value,
              a3.description                                   attribute_value_description
       FROM   &TAB a,
              &TAB2 a2,
              &TAB3 a3
       WHERE  a.code_part        = ''&CODE_PART''
       AND    a2.company         = a.company
       AND    a2.attribute       = a.attribute
       AND    a3.company         = a.company
       AND    a3.attribute       = a.attribute
       AND    a3.attribute_value = a.attribute_value';
      
   EXECUTE IMMEDIATE stmt_;
END;
/   

PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
BEGIN
   index_name_ := table_name_||'_IX1';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',                               
                               NULL,
                               TRUE,
                               TRUE);

   Installation_SYS.Reset_Column_Table(columns_); 

   index_name_ := table_name_||'_IX2';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',                               
                               NULL,
                               TRUE,
                               TRUE);


   Installation_SYS.Reset_Column_Table(columns_);   

   index_name_ := table_name_||'_IX3';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'ATTRIBUTE');
   Database_SYS.Set_Table_Column (columns_ , 'ATTRIBUTE_VALUE');
   
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',                               
                               NULL,
                               TRUE,
                               TRUE);         

   Installation_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_IX4';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'CODE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',                               
                               NULL,
                               TRUE,
                               TRUE);
END;
/   

UNDEFINE TAB
UNDEFINE TAB2
UNDEFINE TAB3
UNDEFINE MV
UNDEFINE CODE_PART  

-- ***** ANALYTIC_ATTR_CODE_C_MV - End *****

-----------------------------------------------------------------------------

-- ***** ANALYTIC_ATTR_CODE_D_MV - Start *****

DEFINE TAB        = ACCOUNTING_ATTRIBUTE_CON_TAB
DEFINE TAB2       = ACCOUNTING_ATTRIBUTE_TAB
DEFINE TAB3       = ACCOUNTING_ATTRIBUTE_VALUE_TAB
DEFINE MV         = ANALYTIC_ATTR_CODE_D_MV
DEFINE CODE_PART  = D

PROMPT Create Materialized View &MV             
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);
   
   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);
   
   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV 
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       AS
       SELECT a.company||''^''||a.code_part_value              id,
              a.code_part_value                                code,
              a.company                                        company,
              a.attribute                                      attribute,
              a2.description                                   attribute_description,
              a.attribute_value                                attribute_value,
              a3.description                                   attribute_value_description
       FROM   &TAB a,
              &TAB2 a2,
              &TAB3 a3
       WHERE  a.code_part        = ''&CODE_PART''
       AND    a2.company         = a.company
       AND    a2.attribute       = a.attribute
       AND    a3.company         = a.company
       AND    a3.attribute       = a.attribute
       AND    a3.attribute_value = a.attribute_value';
      
   EXECUTE IMMEDIATE stmt_;
END;
/   

PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
BEGIN
   index_name_ := table_name_||'_IX1';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',                               
                               NULL,
                               TRUE,
                               TRUE);

   Installation_SYS.Reset_Column_Table(columns_);  

   index_name_ := table_name_||'_IX2';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',                               
                               NULL,
                               TRUE,
                               TRUE);

   Installation_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_IX3';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'ATTRIBUTE');
   Database_SYS.Set_Table_Column (columns_ , 'ATTRIBUTE_VALUE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',                               
                               NULL,
                               TRUE,
                               TRUE);

   Installation_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_IX4';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'CODE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',                               
                               NULL,
                               TRUE,
                               TRUE);
END;
/   

UNDEFINE TAB
UNDEFINE TAB2
UNDEFINE TAB3
UNDEFINE MV
UNDEFINE CODE_PART 

-- ***** ANALYTIC_ATTR_CODE_D_MV - End *****  

-----------------------------------------------------------------------------

-- ***** ANALYTIC_ATTR_CODE_E_MV - Start *****

DEFINE TAB        = ACCOUNTING_ATTRIBUTE_CON_TAB
DEFINE TAB2       = ACCOUNTING_ATTRIBUTE_TAB
DEFINE TAB3       = ACCOUNTING_ATTRIBUTE_VALUE_TAB
DEFINE MV         = ANALYTIC_ATTR_CODE_E_MV
DEFINE CODE_PART  = E

PROMPT Create Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);
   
   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);
   
   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV 
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       AS
       SELECT a.company||''^''||a.code_part_value              id,
              a.code_part_value                                code,
              a.company                                        company,
              a.attribute                                      attribute,
              a2.description                                   attribute_description,
              a.attribute_value                                attribute_value,
              a3.description                                   attribute_value_description
       FROM   &TAB a,
              &TAB2 a2,
              &TAB3 a3
       WHERE  a.code_part        = ''&CODE_PART''
       AND    a2.company         = a.company
       AND    a2.attribute       = a.attribute
       AND    a3.company         = a.company
       AND    a3.attribute       = a.attribute
       AND    a3.attribute_value = a.attribute_value';
      
      EXECUTE IMMEDIATE stmt_;
END;
/   
  
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
BEGIN
   index_name_ := table_name_||'_IX1';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',                               
                               NULL,
                               TRUE,
                               TRUE);

   Installation_SYS.Reset_Column_Table(columns_);   

   index_name_ := table_name_||'_IX2';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',                               
                               NULL,
                               TRUE,
                               TRUE);

   Installation_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_IX3';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'ATTRIBUTE');
   Database_SYS.Set_Table_Column (columns_ , 'ATTRIBUTE_VALUE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',                               
                               NULL,
                               TRUE,
                               TRUE);

   Installation_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_IX4';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'CODE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',                               
                               NULL,
                               TRUE,
                               TRUE);
END;
/   

UNDEFINE TAB
UNDEFINE TAB2
UNDEFINE TAB3
UNDEFINE MV
UNDEFINE CODE_PART     

-- ***** ANALYTIC_ATTR_CODE_E_MV - End *****

-----------------------------------------------------------------------------

-- ***** ANALYTIC_ATTR_CODE_F_MV - Start *****

DEFINE TAB        = ACCOUNTING_ATTRIBUTE_CON_TAB
DEFINE TAB2       = ACCOUNTING_ATTRIBUTE_TAB
DEFINE TAB3       = ACCOUNTING_ATTRIBUTE_VALUE_TAB
DEFINE MV         = ANALYTIC_ATTR_CODE_F_MV
DEFINE CODE_PART  = F

PROMPT Create Materialized View &MV             
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);
   
   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);
   
   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV 
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       AS
       SELECT a.company||''^''||a.code_part_value              id,
              a.code_part_value                                code,
              a.company                                        company,
              a.attribute                                      attribute,
              a2.description                                   attribute_description,
              a.attribute_value                                attribute_value,
              a3.description                                   attribute_value_description
       FROM   &TAB a,
              &TAB2 a2,
              &TAB3 a3
       WHERE  a.code_part        = ''&CODE_PART''
       AND    a2.company         = a.company
       AND    a2.attribute       = a.attribute
       AND    a3.company         = a.company
       AND    a3.attribute       = a.attribute
       AND    a3.attribute_value = a.attribute_value';
      
   EXECUTE IMMEDIATE stmt_;
END;
/   

PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
BEGIN
   index_name_ := table_name_||'_IX1';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',                               
                               NULL,
                               TRUE,
                               TRUE);

   Installation_SYS.Reset_Column_Table(columns_); 

   index_name_ := table_name_||'_IX2';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',                               
                               NULL,
                               TRUE,
                               TRUE);

   Installation_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_IX3';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'ATTRIBUTE');
   Database_SYS.Set_Table_Column (columns_ , 'ATTRIBUTE_VALUE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',                               
                               NULL,
                               TRUE,
                               TRUE);

   Installation_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_IX4';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'CODE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',                               
                               NULL,
                               TRUE,
                               TRUE);
END;
/   

UNDEFINE TAB
UNDEFINE TAB2
UNDEFINE TAB3
UNDEFINE MV
UNDEFINE CODE_PART 

-- ***** ANALYTIC_ATTR_CODE_F_MV - End *****   

-----------------------------------------------------------------------------

-- ***** ANALYTIC_ATTR_CODE_G_MV - Start ***** 
  
DEFINE TAB        = ACCOUNTING_ATTRIBUTE_CON_TAB
DEFINE TAB2       = ACCOUNTING_ATTRIBUTE_TAB
DEFINE TAB3       = ACCOUNTING_ATTRIBUTE_VALUE_TAB
DEFINE MV         = ANALYTIC_ATTR_CODE_G_MV
DEFINE CODE_PART  = G

PROMPT Create Materialized View &MV             
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);
   
   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);
   
   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV 
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       AS
       SELECT a.company||''^''||a.code_part_value              id,
              a.code_part_value                                code,
              a.company                                        company,
              a.attribute                                      attribute,
              a2.description                                   attribute_description,
              a.attribute_value                                attribute_value,
              a3.description                                   attribute_value_description
       FROM   &TAB a,
              &TAB2 a2,
              &TAB3 a3
       WHERE  a.code_part        = ''&CODE_PART''
       AND    a2.company         = a.company
       AND    a2.attribute       = a.attribute
       AND    a3.company         = a.company
       AND    a3.attribute       = a.attribute
       AND    a3.attribute_value = a.attribute_value';
      
      EXECUTE IMMEDIATE stmt_;
END;
/   
  
PROMPT Create constraints and index(s) on Materialized View &MV 
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
BEGIN   
   index_name_ := table_name_||'_IX1';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',                               
                               NULL,
                               TRUE,
                               TRUE);

   Installation_SYS.Reset_Column_Table(columns_); 

   index_name_ := table_name_||'_IX2';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',                               
                               NULL,
                               TRUE,
                               TRUE);

   Installation_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_IX3';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'ATTRIBUTE');
   Database_SYS.Set_Table_Column (columns_ , 'ATTRIBUTE_VALUE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',                               
                               NULL,
                               TRUE,
                               TRUE);

   Installation_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_IX4';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'CODE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',                               
                               NULL,
                               TRUE,
                               TRUE);
END;
/   

UNDEFINE TAB
UNDEFINE TAB2
UNDEFINE TAB3
UNDEFINE MV
UNDEFINE CODE_PART 

-- ***** ANALYTIC_ATTR_CODE_G_MV - End *****  

-----------------------------------------------------------------------------

-- ***** ANALYTIC_ATTR_CODE_H_MV - Start *****  

DEFINE TAB        = ACCOUNTING_ATTRIBUTE_CON_TAB
DEFINE TAB2       = ACCOUNTING_ATTRIBUTE_TAB
DEFINE TAB3       = ACCOUNTING_ATTRIBUTE_VALUE_TAB
DEFINE MV         = ANALYTIC_ATTR_CODE_H_MV
DEFINE CODE_PART  = H

PROMPT Create Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);
   
   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);
   
   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV 
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       AS
       SELECT a.company||''^''||a.code_part_value              id,
              a.code_part_value                                code,
              a.company                                        company,
              a.attribute                                      attribute,
              a2.description                                   attribute_description,
              a.attribute_value                                attribute_value,
              a3.description                                   attribute_value_description
       FROM   &TAB a,
              &TAB2 a2,
              &TAB3 a3
       WHERE  a.code_part        = ''&CODE_PART''
       AND    a2.company         = a.company
       AND    a2.attribute       = a.attribute
       AND    a3.company         = a.company
       AND    a3.attribute       = a.attribute
       AND    a3.attribute_value = a.attribute_value';
      
   EXECUTE IMMEDIATE stmt_;
END;
/
   
PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
BEGIN
   index_name_ := table_name_||'_IX1';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',                               
                               NULL,
                               TRUE,
                               TRUE);

   Installation_SYS.Reset_Column_Table(columns_); 

   index_name_ := table_name_||'_IX2';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',                               
                               NULL,
                               TRUE,
                               TRUE);

   Installation_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_IX3';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'ATTRIBUTE');
   Database_SYS.Set_Table_Column (columns_ , 'ATTRIBUTE_VALUE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',                               
                               NULL,
                               TRUE,
                               TRUE);

   Installation_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_IX4';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'CODE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',                               
                               NULL,
                               TRUE,
                               TRUE);
END;
/   

UNDEFINE TAB
UNDEFINE TAB2
UNDEFINE TAB3
UNDEFINE MV
UNDEFINE CODE_PART 

-- ***** ANALYTIC_ATTR_CODE_H_MV - End ***** 

-----------------------------------------------------------------------------

-- ***** ANALYTIC_ATTR_CODE_I_MV - Start *****

DEFINE TAB        = ACCOUNTING_ATTRIBUTE_CON_TAB
DEFINE TAB2       = ACCOUNTING_ATTRIBUTE_TAB
DEFINE TAB3       = ACCOUNTING_ATTRIBUTE_VALUE_TAB
DEFINE MV         = ANALYTIC_ATTR_CODE_I_MV
DEFINE CODE_PART  = I

PROMPT Create Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);
   
   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);
   
   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV 
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       AS
       SELECT a.company||''^''||a.code_part_value              id,
              a.code_part_value                                code,
              a.company                                        company,
              a.attribute                                      attribute,
              a2.description                                   attribute_description,
              a.attribute_value                                attribute_value,
              a3.description                                   attribute_value_description
       FROM   &TAB a,
              &TAB2 a2,
              &TAB3 a3
       WHERE  a.code_part        = ''&CODE_PART''
       AND    a2.company         = a.company
       AND    a2.attribute       = a.attribute
       AND    a3.company         = a.company
       AND    a3.attribute       = a.attribute
       AND    a3.attribute_value = a.attribute_value';
      
    EXECUTE IMMEDIATE stmt_;
END;
/      
    
PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
BEGIN
   index_name_ := table_name_||'_IX1';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',                               
                               NULL,
                               TRUE,
                               TRUE);

   Installation_SYS.Reset_Column_Table(columns_); 

   index_name_ := table_name_||'_IX2';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',                               
                               NULL,
                               TRUE,
                               TRUE);

   Installation_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_IX3';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'ATTRIBUTE');
   Database_SYS.Set_Table_Column (columns_ , 'ATTRIBUTE_VALUE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',                               
                               NULL,
                               TRUE,
                               TRUE);

   Installation_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_IX4';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'CODE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',                               
                               NULL,
                               TRUE,
                               TRUE);
END;
/   

UNDEFINE TAB
UNDEFINE TAB2
UNDEFINE TAB3
UNDEFINE MV
UNDEFINE CODE_PART    

-- ***** ANALYTIC_ATTR_CODE_I_MV - End *****

-----------------------------------------------------------------------------

-- ***** ANALYTIC_ATTR_CODE_J_MV - Start *****

DEFINE TAB        = ACCOUNTING_ATTRIBUTE_CON_TAB
DEFINE TAB2       = ACCOUNTING_ATTRIBUTE_TAB
DEFINE TAB3       = ACCOUNTING_ATTRIBUTE_VALUE_TAB
DEFINE MV         = ANALYTIC_ATTR_CODE_J_MV
DEFINE CODE_PART  = J

PROMPT Create Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);
   
   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);
   
   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV 
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       AS
       SELECT a.company||''^''||a.code_part_value              id,
              a.code_part_value                                code,
              a.company                                        company,
              a.attribute                                      attribute,
              a2.description                                   attribute_description,
              a.attribute_value                                attribute_value,
              a3.description                                   attribute_value_description
       FROM   &TAB a,
              &TAB2 a2,
              &TAB3 a3
       WHERE  a.code_part        = ''&CODE_PART''
       AND    a2.company         = a.company
       AND    a2.attribute       = a.attribute
       AND    a3.company         = a.company
       AND    a3.attribute       = a.attribute
       AND    a3.attribute_value = a.attribute_value';
      
   EXECUTE IMMEDIATE stmt_;
END;
/      
  
PROMPT Create constraints and index(s) on Materialized View &MV    
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
BEGIN
   index_name_ := table_name_||'_IX1';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',                               
                               NULL,
                               TRUE,
                               TRUE);

   Installation_SYS.Reset_Column_Table(columns_); 

   index_name_ := table_name_||'_IX2';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',                               
                               NULL,
                               TRUE,
                               TRUE);

   Installation_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_IX3';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'ATTRIBUTE');
   Database_SYS.Set_Table_Column (columns_ , 'ATTRIBUTE_VALUE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',                               
                               NULL,
                               TRUE,
                               TRUE);

   Installation_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_IX4';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'CODE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',                               
                               NULL,
                               TRUE,
                               TRUE);
END;
/   

UNDEFINE TAB
UNDEFINE TAB2
UNDEFINE TAB3
UNDEFINE MV
UNDEFINE CODE_PART

-- ***** ANALYTIC_ATTR_CODE_J_MV - End *****

------------------------------------------------------------------

-- ***** ACCOUNT_MV - Start *****

DEFINE MV         = ACCOUNT_MV                            
DEFINE MV_TRANS   = ACCOUNT_TRANSLATION_MV
DEFINE TAB1       = ACCOUNTING_CODE_PART_VALUE_TAB
DEFINE TAB2       = ACCOUNT_GROUP_TAB
DEFINE TAB3       = ACCOUNT_TYPE_TAB
DEFINE TAB4       = COMPANY_FINANCE_TAB
DEFINE TAB5       = KEY_LU_TRANSLATION_TAB

PROMPT Create Materialized View &MV             
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);
   
   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);
   
   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV 
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       AS
       SELECT a.company||''^''||a.code_part_value                  id,
              a.code_part_value                                    code,
              a.description                                        description,
              a.accnt_group                                        account_group,
              b.description                                        account_group_desc,
              a.accnt_type                                         account_type,
              c.description                                        account_type_desc,
              a.company                                            company,
              a.valid_from                                         valid_from,
              a.valid_until                                        valid_until,
              a.logical_account_type                               logical_account_type,
              a.ledg_flag                                          ledger_account,
              a.curr_balance                                       currency_balance,
              a.bud_account                                        budget_account_only,
              a.tax_flag                                           tax_account,
              a.tax_handling_value                                 tax_handling
       FROM   &TAB1 a,                                               
              &TAB2 b,
              &TAB3 c
       WHERE  a.code_part   = ''A''
       AND    a.company     = b.company
       AND    a.accnt_group = b.accnt_group
       AND    a.company     = c.company
       AND    a.accnt_type  = c.user_defined_account_type 
       UNION ALL 
       SELECT company || ''^'' || ''#''                            id,       
              NULL                                                 code,
              NULL                                                 description,
              NULL                                                 account_group,
              NULL                                                 account_group_desc,
              NULL                                                 account_type,
              NULL                                                 account_type_desc,
              company                                              company,
              NULL                                                 valid_from,
              NULL                                                 valid_until,
              NULL                                                 logical_account_type,
              NULL                                                 ledger_account,
              NULL                                                 currency_balance,
              NULL                                                 budget_account_only,
              NULL                                                 tax_account,
              NULL                                                 tax_handling
       FROM &TAB4
       UNION ALL 
       SELECT ''#'' || ''^'' || ''#''                               id,       
              NULL                                                 code,
              NULL                                                 description,
              NULL                                                 account_group,
              NULL                                                 account_group_desc,
              NULL                                                 account_type,
              NULL                                                 account_type_desc,
              NULL                                                 company,
              NULL                                                 valid_from,
              NULL                                                 valid_until,
              NULL                                                 logical_account_type,
              NULL                                                 ledger_account,
              NULL                                                 currency_balance,
              NULL                                                 budget_account_only,
              NULL                                                 tax_account,
              NULL                                                 tax_handling
       FROM BI_DUAL_TAB';
      
   EXECUTE IMMEDIATE stmt_;
END;
/
   
PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_Sys.Create_Constraint(table_name_,
                                  constraint_name_,
                                  columns_,
                                  'P',
                                  '&IFSAPP_INDEX',
                                  NULL,
                                  TRUE,
                                  TRUE);
   Installation_SYS.Reset_Column_Table(columns_);


   index_name_ := table_name_||'_UX1';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'CODE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'U',
                               '&IFSAPP_INDEX',
                               NULL,
                               TRUE,
                               TRUE);

   Installation_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_IX1';
   Database_SYS.Set_Table_Column (columns_ , 'ACCOUNT_GROUP');
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',
                               NULL,
                               TRUE,
                               TRUE);

   Installation_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_IX2';
   Database_SYS.Set_Table_Column (columns_ , 'LOGICAL_ACCOUNT_TYPE');
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',
                               NULL,
                               TRUE,
                               TRUE);

   Installation_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_IX3';
   Database_SYS.Set_Table_Column (columns_ , 'ACCOUNT_TYPE');
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',
                               NULL,
                               TRUE,
                               TRUE);
END;
/   

PROMPT Create Materialized View &MV_TRANS
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV_TRANS';
   index_name_      VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV_TRANS');
   Database_SYS.Remove_All_Cons_And_Idx('&MV_TRANS', TRUE);
   
   dbms_output.put_line('Drop Materialized View &MV_TRANS');
   Database_SYS.Remove_Materialized_View('&MV_TRANS', TRUE);
   
   dbms_output.put_line('Create Materialized View &MV_TRANS');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV_TRANS 
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       AS
       SELECT key_value                                 company,
              attribute_key                             translation_key,
              language_code                             language_code,
              SUBSTR(current_translation,1,100)         description,
              lu                                        lu,
              module                                    module,
              key_name                                  dummy
       FROM &TAB5
       WHERE lu     IN (''Account'',''AccountGroup'',''AccountType'')
       AND module   = ''ACCRUL''
       AND key_name = ''CompanyKeyLu''
       AND rowtype  = ''CompanyKeyLuTranslation''
       AND language_code != ''PROG''
       ';
      
   EXECUTE IMMEDIATE stmt_;
END;
/       
     
PROMPT Create constraints and index(s) on Materialized View &MV_TRANS
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV_TRANS';
   index_name_      VARCHAR2(30);
BEGIN      
   index_name_ := table_name_||'_IX1';
   
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'TRANSLATION_KEY');
   Database_SYS.Set_Table_Column (columns_ , 'LU');
   Database_SYS.Set_Table_Column (columns_ , 'LANGUAGE_CODE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX');
END;
/   

UNDEFINE MV
UNDEFINE MV_TRANS
UNDEFINE TAB1
UNDEFINE TAB2
UNDEFINE TAB3
UNDEFINE TAB4        
UNDEFINE TAB5

-- ***** ACCOUNT_MV - End *****

---------------------------------------------------------------------------

-- ***** ACCOUNTING_PERIOD_MV - Start *****


DEFINE MV         = ACCOUNTING_PERIOD_MV                            
DEFINE MV_TRANS   = ACCOUNTING_PERIOD_TRANSL_MV
DEFINE TAB1       = ACCOUNTING_YEAR_TAB
DEFINE TAB2       = ACCOUNTING_PERIOD_TAB
DEFINE TAB3       = KEY_LU_TRANSLATION_TAB
DEFINE TAB4       = COMPANY_FINANCE_TAB

PROMPT Create Materialized View &MV             
DECLARE
   stmt_            VARCHAR2(32000);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);
   
   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);
   
   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV 
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       AS
       SELECT b.company                    ||''^''||                       
                 TO_CHAR(b.accounting_year)||''^''||                       
                 TO_CHAR(b.accounting_period)                              id,
              TO_CHAR(b.accounting_year)||                                 
                 TO_CHAR(b.accounting_period,''FM00'')                     code,
              b.description                                                description,
              a.company                                                    company,
              b.date_from                                                  start_date,
              b.date_until                                                 end_date,
              b.consolidated                                               consolidated,
              a.year_status                                                year_status,
              b.period_status                                              period_status,
              b.period_status_int                                          period_status_il,
              b.year_end_period                                            period_type,
              b.accounting_period                                          accounting_period,
              a.accounting_year                                            accounting_year,
              a.opening_balances                                           opening_balances,
              a.closing_balances                                           closing_balances,
              a.open_bal_consolidated                                      open_balances_consolidated,
              b.report_from_date                                           report_from_date,
              b.report_until_date                                          report_until_date,
              TO_CHAR(b.accounting_year)||''^''||                            
                 TO_CHAR(b.accounting_period)                              translation_key
       FROM  &TAB1 a,
             &TAB2 b 
       WHERE b.accounting_year = a.accounting_year
       AND   b.company         = a.company
       UNION ALL
       SELECT a.company || ''^#^#''                                        id,       
              NULL                                                         code,
              NULL                                                         description,
              a.company                                                    company,
              NULL                                                         start_date,
              NULL                                                         end_date,
              NULL                                                         consolidated,
              NULL                                                         year_status,
              NULL                                                         period_status,
              NULL                                                         period_status_il,
              NULL                                                         period_type,
              NULL                                                         accounting_period,
              NULL                                                         accounting_year,
              NULL                                                         opening_balances,
              NULL                                                         closing_balances,
              NULL                                                         open_balances_consolidated,
              NULL                                                         report_from_date,
              NULL                                                         report_until_date,
              ''#^#''                                                      translation_key
      FROM   &TAB4 a
      UNION ALL 
      SELECT  ''#^#^#''                                                    id,       
              NULL                                                         code,
              NULL                                                         description,
              NULL                                                         company,
              NULL                                                         start_date,
              NULL                                                         end_date,
              NULL                                                         consolidated,
              NULL                                                         year_status,
              NULL                                                         period_status,
              NULL                                                         period_status_il,
              NULL                                                         period_type,
              NULL                                                         accounting_period,
              NULL                                                         accounting_year,
              NULL                                                         opening_balances,
              NULL                                                         closing_balances,
              NULL                                                         open_balances_consolidated,
              NULL                                                         report_from_date,
              NULL                                                         report_until_date,
              ''#^#''                                                      translation_key
      FROM   BI_DUAL_TAB a';
      
   EXECUTE IMMEDIATE stmt_;

END;
/
   
PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN  
   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_Sys.Create_Constraint(table_name_,
                                  constraint_name_,
                                  columns_,
                                  'P',
                                  '&IFSAPP_INDEX',
                                  NULL,
                                  TRUE,
                                  TRUE);

   Installation_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_UX1';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');     
   Database_SYS.Set_Table_Column (columns_ , 'CODE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'U',
                               '&IFSAPP_INDEX',
                               NULL,
                               TRUE,
                               TRUE);

   Installation_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_UX2';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'ACCOUNTING_YEAR');
   Database_SYS.Set_Table_Column (columns_ , 'ACCOUNTING_PERIOD');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'U',
                               '&IFSAPP_INDEX',
                               NULL,
                               TRUE,
                               TRUE);

   Installation_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_IX1';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'ACCOUNTING_PERIOD');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',
                               NULL,
                               TRUE,
                               TRUE);
END;
/   

PROMPT Create Materialized View &MV_TRANS
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV_TRANS';
   index_name_      VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV_TRANS');
   Database_SYS.Remove_All_Cons_And_Idx('&MV_TRANS', TRUE);
   
   dbms_output.put_line('Drop Materialized View &MV_TRANS');
   Database_SYS.Remove_Materialized_View('&MV_TRANS', TRUE);
   
   dbms_output.put_line('Create Materialized View &MV_TRANS');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV_TRANS 
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       AS
       SELECT key_value                                 company,
              attribute_key                             translation_key,
              language_code                             language_code,
              SUBSTR(current_translation,1,100)         description,
              lu                                        lu,
              module                                    module,
              key_name                                  key_name
       FROM &TAB3
       WHERE key_name = ''CompanyKeyLu''
       AND   module   = ''ACCRUL''
       AND   lu       = ''AccountingPeriod''
       AND   rowtype  = ''CompanyKeyLuTranslation''
       AND   language_code != ''PROG'' ';
      
   EXECUTE IMMEDIATE stmt_;
END;
/   
   
PROMPT Create constraints and index(s) on Materialized View &MV_TRANS
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV_TRANS';
   index_name_      VARCHAR2(30);
BEGIN 
   index_name_ := 'ACCOUNTING_PERIOD_TRANSL_IX1';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'TRANSLATION_KEY');
   Database_SYS.Set_Table_Column (columns_ , 'LANGUAGE_CODE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX');
END;
/   

UNDEFINE MV      
UNDEFINE MV_TRANS
UNDEFINE TAB1    
UNDEFINE TAB2    
UNDEFINE TAB3
UNDEFINE TAB4

-- ***** ACCOUNTING_PERIOD_MV - End *****

-------------------------------------------------------------------

-- ***** COMPANY_FINANCE_MV - Start *****

DEFINE MV      = COMPANY_FINANCE_MV                            
DEFINE TAB1    = COMPANY_FINANCE_TAB 
 
PROMPT Create Materialized View &MV            
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);

BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);
   
   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);
   
   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV 
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       AS
       SELECT a.company                  id,
              a.company                  code,
              a.company                  company,
              a.cons_company             parent_company,
              a.currency_code            currency_code,
              a.parallel_acc_currency    parallel_currency_code
       FROM &TAB1 a
       UNION ALL
       SELECT ''#''                      id,
              NULL                       code,
              NULL                       company,
              NULL                       parent_company,
              NULL                       currency_code,
              NULL                       parallel_currency_code
       FROM BI_DUAL_TAB';
      
   EXECUTE IMMEDIATE stmt_;
   
   dbms_output.put_line('Create constraint and index(s) on Materialized View &MV'); 
   
   -- Since this is a simple MV, Oracle will create a PK constraint automatically on column COMPANY
   -- Only unique indexes will be created

   constraint_name_ := table_name_||'_PK';                                     
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_SYS.Create_Constraint ( table_name_,
                               constraint_name_,
                               columns_,
                               'P',
                               '&IFSAPP_INDEX',
                               NULL,
                               TRUE,
                               TRUE);
   Installation_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_UX1';
   Database_SYS.Set_Table_Column (columns_ , 'CODE');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'U',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);

   index_name_ := table_name_ || '_UX2';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'U',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
END;                                                               
/   

UNDEFINE MV
UNDEFINE TAB1

-- ***** COMPANY_FINANCE_MV - End *****
                   
-------------------------------------------------------------------

-- ***** CODE_B_MV - Start *****


DEFINE MV         = CODE_B_MV                            
DEFINE MV_TRANS   = CODE_B_TRANSLATION_MV
DEFINE TAB1       = ACCOUNTING_CODE_PART_VALUE_TAB
DEFINE TAB2       = COMPANY_FINANCE_TAB
DEFINE TAB3       = KEY_LU_TRANSLATION_TAB  

PROMPT Create Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);
   
   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);
   
   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV 
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       AS
       SELECT a.company||''^''||a.code_part_value   id,
              a.code_part_value                     code,
              a.description                         description,
              a.company                             company,
              a.valid_from                          valid_from,
              a.valid_until                         valid_until
       FROM  &TAB1 a
       WHERE a.code_part      = ''B''
       UNION ALL                                                                  
       SELECT company || ''^'' || ''#''              id,  
              NULL                                   code,
              NULL                                   description,
              company                                company,
              NULL                                   valid_from,
              NULL                                   valid_until
       FROM &TAB2
       UNION ALL                                                                  
       SELECT ''#'' || ''^'' || ''#''                id,  
              NULL                                   code,
              NULL                                   description,
              NULL                                   company,
              NULL                                   valid_from,
              NULL                                   valid_until
       FROM BI_DUAL_TAB';
      
   EXECUTE IMMEDIATE stmt_;
END;
/ 
   
PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_Sys.Create_Constraint(table_name_,
                                  constraint_name_,
                                  columns_,
                                  'P',
                                  '&IFSAPP_INDEX',
                                  NULL,
                                  TRUE,
                                  TRUE);
   Installation_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_UX1';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'CODE');
   Database_SYS.Create_Index (table_name_,
                              index_name_,
                              columns_,
                              'U',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Installation_SYS.Reset_Column_Table(columns_);

END;
/   

PROMPT Create Materialized View &MV_TRANS
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV_TRANS';
   index_name_      VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV_TRANS');
   Database_SYS.Remove_All_Cons_And_Idx('&MV_TRANS', TRUE);
   
   dbms_output.put_line('Drop Materialized View &MV_TRANS');
   Database_SYS.Remove_Materialized_View('&MV_TRANS', TRUE);
   
   dbms_output.put_line('Create Materialized View &MV_TRANS');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV_TRANS 
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       AS
       SELECT key_value                                 company,
              attribute_key                             translation_key,
              language_code                             language_code,
              SUBSTR(current_translation,1,100)         description,
              lu                                        lu,
              module                                    module
       FROM &TAB3
       WHERE lu     = ''CodeB''
       AND module   = ''ACCRUL''
       AND key_name = ''CompanyKeyLu''
       AND rowtype  = ''CompanyKeyLuTranslation''
       AND language_code != ''PROG'' ';
      
   EXECUTE IMMEDIATE stmt_;
END;
/

PROMPT Create constraints and index(s) on Materialized View &MV_TRANS
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV_TRANS';
   index_name_      VARCHAR2(30);
BEGIN   
   index_name_ := table_name_||'_IX1';
   
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'TRANSLATION_KEY');
   Database_SYS.Set_Table_Column (columns_ , 'LU');
   Database_SYS.Set_Table_Column (columns_ , 'LANGUAGE_CODE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX');
END;
/   

UNDEFINE MV
UNDEFINE MV_TRANS
UNDEFINE TAB1
UNDEFINE TAB2
UNDEFINE TAB3

-- ***** CODE_B_MV - End *****

-------------------------------------------------------------------

-- ***** CODE_C_MV - Start *****

DEFINE MV         = CODE_C_MV                            
DEFINE MV_TRANS   = CODE_C_TRANSLATION_MV
DEFINE TAB1       = ACCOUNTING_CODE_PART_VALUE_TAB
DEFINE TAB2       = COMPANY_FINANCE_TAB
DEFINE TAB3       = KEY_LU_TRANSLATION_TAB

PROMPT Create Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);
   
   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);
   
   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV 
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       AS
       SELECT a.company||''^''||a.code_part_value   id,
              a.code_part_value                     code,
              a.description                         description,
              a.company                             company,
              a.valid_from                          valid_from,
              a.valid_until                         valid_until
       FROM  &TAB1 a
       WHERE a.code_part      = ''C''
       UNION ALL                                                                  
       SELECT company || ''^'' || ''#''             id,  
              NULL                                  code,
              NULL                                  description,
              company                               company,
              NULL                                  valid_from,
              NULL                                  valid_until
       FROM &TAB2       
       UNION ALL                                                                  
       SELECT ''#'' || ''^'' || ''#''               id,  
              NULL                                  code,
              NULL                                  description,
              NULL                                  company,
              NULL                                  valid_from,
              NULL                                  valid_until
       FROM BI_DUAL_TAB';
      
   EXECUTE IMMEDIATE stmt_;
END;
/  

PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_Sys.Create_Constraint(table_name_,
                                  constraint_name_,
                                  columns_,
                                  'P',
                                  '&IFSAPP_INDEX',
                                  NULL,
                                  TRUE,
                                  TRUE);
   Installation_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_UX1';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'CODE');
   Database_SYS.Create_Index (table_name_,
                              index_name_,
                              columns_,
                              'U',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Installation_SYS.Reset_Column_Table(columns_);

END;
/   

PROMPT Create Materialized View &MV_TRANS
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV_TRANS';
   index_name_      VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV_TRANS');
   Database_SYS.Remove_All_Cons_And_Idx('&MV_TRANS', TRUE);
   
   dbms_output.put_line('Drop Materialized View &MV_TRANS');
   Database_SYS.Remove_Materialized_View('&MV_TRANS', TRUE);
   
   dbms_output.put_line('Create Materialized View &MV_TRANS');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV_TRANS 
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       AS
       SELECT key_value                                 company,
              attribute_key                             translation_key,
              language_code                             language_code,
              SUBSTR(current_translation,1,100)         description,
              lu                                        lu,
              module                                    module
       FROM &TAB3
       WHERE lu     = ''CodeC''
       AND module   = ''ACCRUL''
       AND key_name = ''CompanyKeyLu''
       AND rowtype  = ''CompanyKeyLuTranslation''
       AND language_code != ''PROG''';
      
   EXECUTE IMMEDIATE stmt_;
END;
/     

PROMPT Create constraints and index(s) on Materialized View &MV_TRANS
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV_TRANS';
   index_name_      VARCHAR2(30);
BEGIN
   index_name_ := table_name_||'_IX1';
   
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'TRANSLATION_KEY');
   Database_SYS.Set_Table_Column (columns_ , 'LU');
   Database_SYS.Set_Table_Column (columns_ , 'LANGUAGE_CODE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX');
END;
/   

UNDEFINE MV
UNDEFINE MV_TRANS
UNDEFINE TAB1
UNDEFINE TAB2
UNDEFINE TAB3

-- ***** CODE_C_MV - End *****

-------------------------------------------------------------------

-- ***** CODE_D_MV - Start *****

DEFINE MV         = CODE_D_MV                            
DEFINE MV_TRANS   = CODE_D_TRANSLATION_MV
DEFINE TAB1       = ACCOUNTING_CODE_PART_VALUE_TAB
DEFINE TAB2       = COMPANY_FINANCE_TAB
DEFINE TAB3       = KEY_LU_TRANSLATION_TAB
                         
PROMPT Create Materialized View &MV             
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);
   
   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);
   
   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV 
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       AS
       SELECT a.company||''^''||a.code_part_value   id,
              a.code_part_value                     code,
              a.description                         description,
              a.company                             company,
              a.valid_from                          valid_from,
              a.valid_until                         valid_until
       FROM  &TAB1 a
       WHERE a.code_part      = ''D''
       UNION ALL                                                                  
       SELECT company || ''^'' || ''#''              id,  
              NULL                                   code,
              NULL                                   description,
              company                                company,
              NULL                                   valid_from,
              NULL                                   valid_until
       FROM &TAB2       
       UNION ALL                                                                  
       SELECT ''#'' || ''^'' || ''#''                id,  
              NULL                                   code,
              NULL                                   description,
              NULL                                   company,
              NULL                                   valid_from,
              NULL                                   valid_until
       FROM BI_DUAL_TAB';
      
   EXECUTE IMMEDIATE stmt_;
END;
/
    
PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN   
   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_Sys.Create_Constraint(table_name_,
                                  constraint_name_,
                                  columns_,
                                  'P',
                                  '&IFSAPP_INDEX',
                                  NULL,
                                  TRUE,
                                  TRUE);
   Installation_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_UX1';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'CODE');
   Database_SYS.Create_Index (table_name_,
                              index_name_,
                              columns_,
                              'U',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Installation_SYS.Reset_Column_Table(columns_);


END;
/   

PROMPT Create Materialized View &MV_TRANS
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV_TRANS';
   index_name_      VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV_TRANS');
   Database_SYS.Remove_All_Cons_And_Idx('&MV_TRANS', TRUE);
   
   dbms_output.put_line('Drop Materialized View &MV_TRANS');
   Database_SYS.Remove_Materialized_View('&MV_TRANS', TRUE);
   
   dbms_output.put_line('Create Materialized View &MV_TRANS');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV_TRANS 
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       AS
       SELECT key_value                                 company,
              attribute_key                             translation_key,
              language_code                             language_code,
              SUBSTR(current_translation,1,100)         description,
              lu                                        lu,
              module                                    module
       FROM &TAB3
       WHERE lu     = ''CodeD''
       AND module   = ''ACCRUL''
       AND key_name = ''CompanyKeyLu''
       AND rowtype  = ''CompanyKeyLuTranslation''
       AND language_code != ''PROG''';
      
   EXECUTE IMMEDIATE stmt_;
END;
/   
                                                                     
PROMPT Create constraints and index(s) on Materialized View &MV_TRANS
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV_TRANS';
   index_name_      VARCHAR2(30);
BEGIN 
   index_name_ := table_name_||'_IX1';
   
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'TRANSLATION_KEY');
   Database_SYS.Set_Table_Column (columns_ , 'LU');
   Database_SYS.Set_Table_Column (columns_ , 'LANGUAGE_CODE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX');
END;
/   

UNDEFINE MV        
UNDEFINE MV_TRANS  
UNDEFINE TAB1      
UNDEFINE TAB2      
UNDEFINE TAB3   

-- ***** CODE_D_MV - End *****            

-------------------------------------------------------------------

-- ***** CODE_E_MV - Start *****

DEFINE MV         = CODE_E_MV                            
DEFINE MV_TRANS   = CODE_E_TRANSLATION_MV
DEFINE TAB1       = ACCOUNTING_CODE_PART_VALUE_TAB
DEFINE TAB2       = COMPANY_FINANCE_TAB
DEFINE TAB3       = KEY_LU_TRANSLATION_TAB

PROMPT Create Materialized View &MV             
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);
   
   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);
   
   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV 
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       AS
       SELECT a.company||''^''||a.code_part_value   id,
              a.code_part_value                     code,
              a.description                         description,
              a.company                             company,
              a.valid_from                          valid_from,
              a.valid_until                         valid_until
       FROM  &TAB1 a
       WHERE a.code_part      = ''E''
       UNION ALL                                                                  
       SELECT company || ''^'' || ''#''              id,  
              NULL                                   code,
              NULL                                   description,
              company                                company,
              NULL                                   valid_from,
              NULL                                   valid_until
       FROM &TAB2       
       UNION ALL                                                                  
       SELECT ''#'' || ''^'' || ''#''                id,  
              NULL                                   code,
              NULL                                   description,
              NULL                                   company,
              NULL                                   valid_from,
              NULL                                   valid_until
       FROM BI_DUAL_TAB';

      
   EXECUTE IMMEDIATE stmt_;
END;
/      

PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_Sys.Create_Constraint(table_name_,
                                  constraint_name_,
                                  columns_,
                                  'P',
                                  '&IFSAPP_INDEX',
                                  NULL,
                                  TRUE,
                                  TRUE);
   Installation_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_UX1';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'CODE');
   Database_SYS.Create_Index (table_name_,
                              index_name_,
                              columns_,
                              'U',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Installation_SYS.Reset_Column_Table(columns_);

END;
/   

PROMPT Create Materialized View &MV_TRANS
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV_TRANS';
   index_name_      VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV_TRANS');
   Database_SYS.Remove_All_Cons_And_Idx('&MV_TRANS', TRUE);
   
   dbms_output.put_line('Drop Materialized View &MV_TRANS');
   Database_SYS.Remove_Materialized_View('&MV_TRANS', TRUE);
   
   dbms_output.put_line('Create Materialized View &MV_TRANS');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV_TRANS 
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       AS
       SELECT key_value                                 company,
              attribute_key                             translation_key,
              language_code                             language_code,
              SUBSTR(current_translation,1,100)         description,
              lu                                        lu,
              module                                    module
       FROM &TAB3
       WHERE lu     = ''CodeE''
       AND module   = ''ACCRUL''
       AND key_name = ''CompanyKeyLu''
       AND rowtype  = ''CompanyKeyLuTranslation''
       AND language_code != ''PROG''';

   EXECUTE IMMEDIATE stmt_;
END;
/ 
   
PROMPT Create constraints and index(s) on Materialized View &MV_TRANS
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV_TRANS';
   index_name_      VARCHAR2(30);
BEGIN
   index_name_ := table_name_||'_IX1';  
   
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'TRANSLATION_KEY');
   Database_SYS.Set_Table_Column (columns_ , 'LU');
   Database_SYS.Set_Table_Column (columns_ , 'LANGUAGE_CODE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX');
END;
/   

UNDEFINE MV       
UNDEFINE MV_TRANS 
UNDEFINE TAB1     
UNDEFINE TAB2     
UNDEFINE TAB3     

-- ***** CODE_E_MV - End *****

-------------------------------------------------------------------

-- ***** CODE_F_MV - Start *****

DEFINE MV         = CODE_F_MV                            
DEFINE MV_TRANS   = CODE_F_TRANSLATION_MV
DEFINE TAB1       = ACCOUNTING_CODE_PART_VALUE_TAB
DEFINE TAB2       = COMPANY_FINANCE_TAB
DEFINE TAB3       = KEY_LU_TRANSLATION_TAB

PROMPT Create Materialized View &MV             
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);
   
   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);
   
   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV 
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       AS
       SELECT a.company||''^''||a.code_part_value   id,
              a.code_part_value                     code,
              a.description                         description,
              a.company                             company,
              a.valid_from                          valid_from,
              a.valid_until                         valid_until
       FROM  &TAB1 a
       WHERE a.code_part      = ''F''
       UNION ALL                                                                  
       SELECT company || ''^'' || ''#''              id,  
              NULL                                   code,
              NULL                                   description,
              company                                company,
              NULL                                   valid_from,
              NULL                                   valid_until
       FROM &TAB2       
       UNION ALL                                                                  
       SELECT ''#'' || ''^'' || ''#''                id,  
              NULL                                   code,
              NULL                                   description,
              NULL                                   company,
              NULL                                   valid_from,
              NULL                                   valid_until
       FROM BI_DUAL_TAB';

   EXECUTE IMMEDIATE stmt_;
END;
/         

   
PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_Sys.Create_Constraint(table_name_,
                                  constraint_name_,
                                  columns_,
                                  'P',
                                  '&IFSAPP_INDEX',
                                  NULL,
                                  TRUE,
                                  TRUE);
   Installation_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_UX1';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'CODE');
   Database_SYS.Create_Index (table_name_,
                              index_name_,
                              columns_,
                              'U',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Installation_SYS.Reset_Column_Table(columns_);

END;
/   

PROMPT Create Materialized View &MV_TRANS
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV_TRANS';
   index_name_      VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV_TRANS');
   Database_SYS.Remove_All_Cons_And_Idx('&MV_TRANS', TRUE);
   
   dbms_output.put_line('Drop Materialized View &MV_TRANS');
   Database_SYS.Remove_Materialized_View('&MV_TRANS', TRUE);
   
   dbms_output.put_line('Create Materialized View &MV_TRANS');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV_TRANS 
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       AS
       SELECT key_value                                 company,
              attribute_key                             translation_key,
              language_code                             language_code,
              SUBSTR(current_translation,1,100)         description,
              lu                                        lu,
              module                                    module
       FROM &TAB3
       WHERE lu     = ''CodeF''
       AND module   = ''ACCRUL''
       AND key_name = ''CompanyKeyLu''
       AND rowtype  = ''CompanyKeyLuTranslation''
       AND language_code != ''PROG''';
      
   EXECUTE IMMEDIATE stmt_;
END;
/

PROMPT Create constraints and index(s) on Materialized View &MV_TRANS
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV_TRANS';
   index_name_      VARCHAR2(30);
BEGIN 
   index_name_ := table_name_||'_IX1';
   
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'TRANSLATION_KEY');
   Database_SYS.Set_Table_Column (columns_ , 'LU');
   Database_SYS.Set_Table_Column (columns_ , 'LANGUAGE_CODE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX');
END;
/   

UNDEFINE MV      
UNDEFINE MV_TRANS
UNDEFINE TAB1    
UNDEFINE TAB2    
UNDEFINE TAB3    

-- ***** CODE_F_MV - End *****

-------------------------------------------------------------------

-- ***** CODE_G_MV - Start *****

DEFINE MV         = CODE_G_MV                            
DEFINE MV_TRANS   = CODE_G_TRANSLATION_MV
DEFINE TAB1       = ACCOUNTING_CODE_PART_VALUE_TAB
DEFINE TAB2       = COMPANY_FINANCE_TAB
DEFINE TAB3       = KEY_LU_TRANSLATION_TAB
    
PROMPT Create Materialized View &MV                      
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);
   
   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);
   
   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV 
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       AS
       SELECT a.company||''^''||a.code_part_value   id,
              a.code_part_value                     code,
              a.description                         description,
              a.company                             company,
              a.valid_from                          valid_from,
              a.valid_until                         valid_until
       FROM  &TAB1 a
       WHERE a.code_part      = ''G''
       UNION ALL                                                                  
       SELECT company || ''^'' || ''#''              id,  
              NULL                                   code,
              NULL                                   description,
              company                                company,
              NULL                                   valid_from,
              NULL                                   valid_until
       FROM &TAB2       
       UNION ALL                                                                  
       SELECT ''#'' || ''^'' || ''#''                id,  
              NULL                                   code,
              NULL                                   description,
              NULL                                   company,
              NULL                                   valid_from,
              NULL                                   valid_until
       FROM BI_DUAL_TAB';
    
   EXECUTE IMMEDIATE stmt_;
END;
/   
 
PROMPT Create constraints and index(s) on Materialized View &MV 
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_Sys.Create_Constraint(table_name_,
                                  constraint_name_,
                                  columns_,
                                  'P',
                                  '&IFSAPP_INDEX',
                                  NULL,
                                  TRUE,
                                  TRUE);
   Installation_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_UX1';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'CODE');
   Database_SYS.Create_Index (table_name_,
                              index_name_,
                              columns_,
                              'U',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
END;
/   

PROMPT Create Materialized View &MV_TRANS
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV_TRANS';
   index_name_      VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV_TRANS');
   Database_SYS.Remove_All_Cons_And_Idx('&MV_TRANS', TRUE);
   
   dbms_output.put_line('Drop Materialized View &MV_TRANS');
   Database_SYS.Remove_Materialized_View('&MV_TRANS', TRUE);
   
   dbms_output.put_line('Create Materialized View &MV_TRANS');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV_TRANS 
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       AS
       SELECT key_value                                 company,
              attribute_key                             translation_key,
              language_code                             language_code,
              SUBSTR(current_translation,1,100)         description,
              lu                                        lu,
              module                                    module
       FROM &TAB3
       WHERE lu     = ''CodeG''
       AND module   = ''ACCRUL''
       AND key_name = ''CompanyKeyLu''
       AND rowtype  = ''CompanyKeyLuTranslation''
       AND language_code != ''PROG''';
      
   EXECUTE IMMEDIATE stmt_;
END;
/
  
PROMPT Create constraints and index(s) on Materialized View &MV_TRANS 
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV_TRANS';
   index_name_      VARCHAR2(30);
BEGIN 
   index_name_ := table_name_||'_IX1';
   
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'TRANSLATION_KEY');
   Database_SYS.Set_Table_Column (columns_ , 'LU');
   Database_SYS.Set_Table_Column (columns_ , 'LANGUAGE_CODE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX');
END;
/   


UNDEFINE MV      
UNDEFINE MV_TRANS
UNDEFINE TAB1    
UNDEFINE TAB2    
UNDEFINE TAB3    

-- ***** CODE_G_MV - End *****

-------------------------------------------------------------------

-- ***** CODE_H_MV - Start *****

DEFINE MV         = CODE_H_MV                            
DEFINE MV_TRANS   = CODE_H_TRANSLATION_MV
DEFINE TAB1       = ACCOUNTING_CODE_PART_VALUE_TAB
DEFINE TAB2       = COMPANY_FINANCE_TAB
DEFINE TAB3       = KEY_LU_TRANSLATION_TAB

PROMPT Create Materialized View &MV             
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);
   
   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);
   
   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV 
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       AS
       SELECT a.company||''^''||a.code_part_value   id,
              a.code_part_value                     code,
              a.description                         description,
              a.company                             company,
              a.valid_from                          valid_from,
              a.valid_until                         valid_until
       FROM  &TAB1 a
       WHERE a.code_part      = ''H''
       UNION ALL                                                                  
       SELECT company || ''^'' || ''#''              id,  
              NULL                                   code,
              NULL                                   description,
              company                                company,
              NULL                                   valid_from,
              NULL                                   valid_until
       FROM &TAB2       
       UNION ALL                                                                  
       SELECT ''#'' || ''^'' || ''#''                id,  
              NULL                                   code,
              NULL                                   description,
              NULL                                   company,
              NULL                                   valid_from,
              NULL                                   valid_until
       FROM BI_DUAL_TAB';
      
   EXECUTE IMMEDIATE stmt_;
END;
/

PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_Sys.Create_Constraint(table_name_,
                                  constraint_name_,
                                  columns_,
                                  'P',
                                  '&IFSAPP_INDEX',
                                  NULL,
                                  TRUE,
                                  TRUE);
   Installation_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_UX1';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'CODE');
   Database_SYS.Create_Index (table_name_,
                              index_name_,
                              columns_,
                              'U',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
END;
/   

PROMPT Create Materialized View &MV_TRANS
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV_TRANS';
   index_name_      VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV_TRANS');
   Database_SYS.Remove_All_Cons_And_Idx('&MV_TRANS', TRUE);
   
   dbms_output.put_line('Drop Materialized View &MV_TRANS');
   Database_SYS.Remove_Materialized_View('&MV_TRANS', TRUE);
   
   dbms_output.put_line('Create Materialized View &MV_TRANS');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV_TRANS 
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       AS
       SELECT key_value                                 company,
              attribute_key                             translation_key,
              language_code                             language_code,
              SUBSTR(current_translation,1,100)         description,
              lu                                        lu,
              module                                    module
       FROM &TAB3
       WHERE lu     = ''CodeH''
       AND module   = ''ACCRUL''
       AND key_name = ''CompanyKeyLu''
       AND rowtype  = ''CompanyKeyLuTranslation''
       AND language_code != ''PROG''';
      
   EXECUTE IMMEDIATE stmt_;

END;
/

PROMPT Create constraints and index(s) on Materialized View &MV_TRANS
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV_TRANS';
   index_name_      VARCHAR2(30);
BEGIN   
   index_name_ := table_name_||'_IX1';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'TRANSLATION_KEY');
   Database_SYS.Set_Table_Column (columns_ , 'LU');
   Database_SYS.Set_Table_Column (columns_ , 'LANGUAGE_CODE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX');
END;
/   


UNDEFINE MV      
UNDEFINE MV_TRANS
UNDEFINE TAB1    
UNDEFINE TAB2    
UNDEFINE TAB3    

-- ***** CODE_H_MV - End *****

-------------------------------------------------------------------

-- ***** CODE_I_MV - Start *****

DEFINE MV         = CODE_I_MV                            
DEFINE MV_TRANS   = CODE_I_TRANSLATION_MV
DEFINE TAB1       = ACCOUNTING_CODE_PART_VALUE_TAB
DEFINE TAB2       = COMPANY_FINANCE_TAB
DEFINE TAB3       = KEY_LU_TRANSLATION_TAB

PROMPT Create Materialized View &MV             
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);
   
   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);
   
   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV 
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       AS
       SELECT a.company||''^''||a.code_part_value   id,
              a.code_part_value                     code,
              a.description                         description,
              a.company                             company,
              a.valid_from                          valid_from,
              a.valid_until                         valid_until
       FROM  &TAB1 a
       WHERE a.code_part      = ''I''
       UNION ALL                                                                  
       SELECT company || ''^'' || ''#''              id,  
              NULL                                   code,
              NULL                                   description,
              company                                company,
              NULL                                   valid_from,
              NULL                                   valid_until
       FROM &TAB2       
       UNION ALL                                                                  
       SELECT ''#'' || ''^'' || ''#''                id,  
              NULL                                   code,
              NULL                                   description,
              NULL                                   company,
              NULL                                   valid_from,
              NULL                                   valid_until
       FROM BI_DUAL_TAB';

   EXECUTE IMMEDIATE stmt_;
END;
/ 

PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_Sys.Create_Constraint(table_name_,
                                  constraint_name_,
                                  columns_,
                                  'P',
                                  '&IFSAPP_INDEX',
                                  NULL,
                                  TRUE,
                                  TRUE);
   Installation_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_UX1';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'CODE');
   Database_SYS.Create_Index (table_name_,
                              index_name_,
                              columns_,
                              'U',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Installation_SYS.Reset_Column_Table(columns_);

END;
/   

PROMPT Create Materialized View &MV_TRANS
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV_TRANS';
   index_name_      VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV_TRANS');
   Database_SYS.Remove_All_Cons_And_Idx('&MV_TRANS', TRUE);
   
   dbms_output.put_line('Drop Materialized View &MV_TRANS');
   Database_SYS.Remove_Materialized_View('&MV_TRANS', TRUE);
   
   dbms_output.put_line('Create Materialized View &MV_TRANS');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV_TRANS 
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       AS
       SELECT key_value                                 company,
              attribute_key                             translation_key,
              language_code                             language_code,
              SUBSTR(current_translation,1,100)         description,
              lu                                        lu,
              module                                    module
       FROM &TAB3
       WHERE lu     = ''CodeI''
       AND module   = ''ACCRUL''
       AND key_name = ''CompanyKeyLu''
       AND rowtype  = ''CompanyKeyLuTranslation''
       AND language_code != ''PROG''';
      
   EXECUTE IMMEDIATE stmt_;
END;
/ 

PROMPT Create constraints and index(s) on Materialized View &MV_TRANS
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV_TRANS';
   index_name_      VARCHAR2(30);
BEGIN
   index_name_ := table_name_||'_IX1';   

   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'TRANSLATION_KEY');
   Database_SYS.Set_Table_Column (columns_ , 'LU');
   Database_SYS.Set_Table_Column (columns_ , 'LANGUAGE_CODE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX');
END;
/   

UNDEFINE MV      
UNDEFINE MV_TRANS
UNDEFINE TAB1    
UNDEFINE TAB2    
UNDEFINE TAB3  

-- ***** CODE_I_MV - End *****  

-------------------------------------------------------------------

-- ***** CODE_J_MV - Start *****

DEFINE MV         = CODE_J_MV                            
DEFINE MV_TRANS   = CODE_J_TRANSLATION_MV
DEFINE TAB1       = ACCOUNTING_CODE_PART_VALUE_TAB
DEFINE TAB2       = COMPANY_FINANCE_TAB
DEFINE TAB3       = KEY_LU_TRANSLATION_TAB

PROMPT Create Materialized View &MV             
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);
   
   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);
   
   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV 
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       AS
       SELECT a.company||''^''||a.code_part_value   id,
              a.code_part_value                     code,
              a.description                         description,
              a.company                             company,
              a.valid_from                          valid_from,
              a.valid_until                         valid_until
       FROM  &TAB1 a
       WHERE a.code_part      = ''J''
       UNION ALL                                                                  
       SELECT company || ''^'' || ''#''              id,  
              NULL                                   code,
              NULL                                   description,
              company                                company,
              NULL                                   valid_from,
              NULL                                   valid_until
       FROM &TAB2       
       UNION ALL                                                                  
       SELECT ''#'' || ''^'' || ''#''                id,  
              NULL                                   code,
              NULL                                   description,
              NULL                                   company,
              NULL                                   valid_from,
              NULL                                   valid_until
       FROM BI_DUAL_TAB';
      
   EXECUTE IMMEDIATE stmt_;
END;
/   

PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN   
   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_Sys.Create_Constraint(table_name_,
                                  constraint_name_,
                                  columns_,
                                  'P',
                                  '&IFSAPP_INDEX',
                                  NULL,
                                  TRUE,
                                  TRUE);
   Installation_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_UX1';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'CODE');
   Database_SYS.Create_Index (table_name_,
                              index_name_,
                              columns_,
                              'U',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
END;
/   

PROMPT Create Materialized View &MV_TRANS
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV_TRANS';
   index_name_      VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV_TRANS');
   Database_SYS.Remove_All_Cons_And_Idx('&MV_TRANS', TRUE);
   
   dbms_output.put_line('Drop Materialized View &MV_TRANS');
   Database_SYS.Remove_Materialized_View('&MV_TRANS', TRUE);
   
   dbms_output.put_line('Create Materialized View &MV_TRANS');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV_TRANS 
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       AS
       SELECT key_value                                 company,
              attribute_key                             translation_key,
              language_code                             language_code,
              SUBSTR(current_translation,1,100)         description,
              lu                                        lu,
              module                                    module
       FROM &TAB3
       WHERE lu     = ''CodeJ''
       AND module   = ''ACCRUL''
       AND key_name = ''CompanyKeyLu''
       AND rowtype  = ''CompanyKeyLuTranslation''
       AND language_code != ''PROG''';
      
   EXECUTE IMMEDIATE stmt_;
END;
/      
  
PROMPT Create constraints and index(s) on Materialized View &MV_TRANS 
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV_TRANS';
   index_name_      VARCHAR2(30);
BEGIN
   index_name_ := table_name_||'_IX1';
   
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'TRANSLATION_KEY');
   Database_SYS.Set_Table_Column (columns_ , 'LU');
   Database_SYS.Set_Table_Column (columns_ , 'LANGUAGE_CODE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX');
END;
/   


UNDEFINE MV      
UNDEFINE MV_TRANS
UNDEFINE TAB1    
UNDEFINE TAB2    
UNDEFINE TAB3    

-- ***** CODE_J_MV - End *****

---------------------------------------------------------------

-- ***** VOUCHER_TYPE_MV - Start *****

DEFINE MV         = VOUCHER_TYPE_MV
DEFINE MV_TRANS   = VOUCHER_TYPE_TRANSL_MV
DEFINE TAB        = VOUCHER_TYPE_TAB
DEFINE TAB2       = COMPANY_FINANCE_TAB   
DEFINE TAB_TRANS  = KEY_LU_TRANSLATION_TAB

PROMPT Create Materialized View &MV             
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);
   
   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);
   
   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV 
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       AS
       SELECT t.company||''^''||t.voucher_type          id,
              t.voucher_type                            code,
              t.company                                 company,
              t.description                             description,
              t.ledger_id                               ledger_id,
              t.automatic_allot                         automatic_allot,
              t.use_manual                              use_manual,
              t.single_function_group                   single_function_group,
              t.simulation_voucher                      simulation_voucher
       FROM &TAB t
       UNION ALL
              SELECT c.company || ''^'' || ''#''        id,
              NULL                                      code,
              c.company                                 company,
              NULL                                      description,
              NULL                                      ledger_id,
              NULL                                      automatic_allot,
              NULL                                      use_manual,
              NULL                                      single_function_group,
              NULL                                      simulation_voucher
       FROM &TAB2 c
       UNION ALL
              SELECT ''#'' || ''^'' || ''#''            id,
              NULL                                      code,
              NULL                                      company,
              NULL                                      description,
              NULL                                      ledger_id,
              NULL                                      automatic_allot,
              NULL                                      use_manual,
              NULL                                      single_function_group,
              NULL                                      simulation_voucher
       FROM BI_DUAL_TAB';

   EXECUTE IMMEDIATE stmt_;
END;
/   
   
PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN   
   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_Sys.Create_Constraint(table_name_,
                                  constraint_name_,
                                  columns_,
                                  'P',
                                  '&IFSAPP_INDEX',
                                  NULL,
                                  TRUE,
                                  TRUE);
   Installation_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_UX1';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'CODE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'U',
                               '&IFSAPP_INDEX',
                               NULL,
                               TRUE,
                               TRUE);
END;
/   

PROMPT Create Materialized View &MV_TRANS
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV_TRANS';
   index_name_      VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV_TRANS');
   Database_SYS.Remove_All_Cons_And_Idx('&MV_TRANS', TRUE);
   
   dbms_output.put_line('Drop Materialized View &MV_TRANS');
   Database_SYS.Remove_Materialized_View('&MV_TRANS', TRUE);
   
   dbms_output.put_line('Create Materialized View &MV_TRANS');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV_TRANS 
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       AS
       SELECT key_value                                 company,
              attribute_key                             translation_key,
              language_code                             language_code,
              SUBSTR(current_translation,1,100)         description,
              lu                                        lu,
              module                                    module
       FROM &TAB_TRANS
       WHERE lu     = ''VoucherType''
       AND module   = ''ACCRUL''
       AND key_name = ''CompanyKeyLu''
       AND rowtype  = ''CompanyKeyLuTranslation''
       AND language_code != ''PROG''';
      
   EXECUTE IMMEDIATE stmt_;
END;
/
   
PROMPT Create constraints and index(s) on Materialized View &MV_TRANS
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV_TRANS';
   index_name_      VARCHAR2(30);
BEGIN
   index_name_ := table_name_||'_IX1';
   
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'TRANSLATION_KEY');
   Database_SYS.Set_Table_Column (columns_ , 'LU');
   Database_SYS.Set_Table_Column (columns_ , 'LANGUAGE_CODE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX');
END;
/   

UNDEFINE MV
UNDEFINE MV_TRANS
UNDEFINE TAB
UNDEFINE TAB2
UNDEFINE TAB_TRANS

-- ***** VOUCHER_TYPE_MV - End *****

-------------------------------------------------------------------

-- ***** ACCOUNTING_PROCESS_CODE_MV - Start *****

DEFINE TAB1       = ACCOUNTING_PROCESS_CODE_TAB
DEFINE TAB2       = COMPANY_FINANCE_TAB
DEFINE TAB_TRANS  = KEY_LU_TRANSLATION_TAB
DEFINE MV         = ACCOUNTING_PROCESS_CODE_MV
DEFINE MV_TRANS   = ACC_PROCESS_CODE_TRANSL_MV
                              
PROMPT Create Materialized View &MV                          
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);
   
   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);
   
   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV 
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       AS
       SELECT company||''^''||process_code           id,
              process_code                           code,
              company                                company,
              description                            description,
              valid_from                             valid_from,
              valid_until                            valid_until
       FROM &TAB1
       UNION ALL
       SELECT company || ''^'' || ''#''              id,
              NULL                                   code,
              company                                company,
              NULL                                   description,
              NULL                                   valid_from,
              NULL                                   valid_until
       FROM &TAB2                                
       UNION ALL                                                                  
       SELECT ''#'' || ''^'' || ''#''                id,  
              NULL                                   code,
              NULL                                   description,
              NULL                                   company,
              NULL                                   valid_from,
              NULL                                   valid_until
       FROM BI_DUAL_TAB';
             
   EXECUTE IMMEDIATE stmt_;

   dbms_output.put_line('Create constraint and index(s) on Materialized View &MV');

   constraint_name_ := table_name_||'_PK';                            
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_SYS.Create_Constraint ( table_name_,
                               constraint_name_,
                               columns_,
                               'P',
                               '&IFSAPP_INDEX',
                               NULL,
                               TRUE,
                               TRUE);

   Installation_SYS.Reset_Column_Table(columns_); 

   index_name_ := table_name_||'_UX1';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'CODE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'U',
                               '&IFSAPP_INDEX',
                               NULL,
                               TRUE,
                               TRUE);
END;
/   

PROMPT Create Materialized View &MV_TRANS
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV_TRANS';
   index_name_      VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV_TRANS');
   Database_SYS.Remove_All_Cons_And_Idx('&MV_TRANS', TRUE);
   
   dbms_output.put_line('Drop Materialized View &MV_TRANS');
   Database_SYS.Remove_Materialized_View('&MV_TRANS', TRUE);
   
   dbms_output.put_line('Create Materialized View &MV_TRANS');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV_TRANS 
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       AS
       SELECT key_value                                    company,
              attribute_key                                translation_key,
              language_code                                language_code,
              SUBSTR(current_translation,1,100)            description,
              lu                                           lu,
              module                                       module,
              key_name                                     dummy
       FROM &TAB_TRANS
       WHERE lu     = ''AccountProcessCode''
       AND module   = ''ACCRUL''
       AND key_name = ''CompanyKeyLu''
       AND rowtype  = ''CompanyKeyLuTranslation''
       AND language_code != ''PROG''';
      
   EXECUTE IMMEDIATE stmt_;
END;
/ 
   
PROMPT Create constraints and index(s) on Materialized View &MV_TRANS
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV_TRANS';
   index_name_      VARCHAR2(30);
BEGIN 
   index_name_ := table_name_||'_IX1';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'TRANSLATION_KEY');
   Database_SYS.Set_Table_Column (columns_ , 'LU');
   Database_SYS.Set_Table_Column (columns_ , 'LANGUAGE_CODE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX');
END;
/   

UNDEFINE TAB1
UNDEFINE TAB2
UNDEFINE TAB_TRANS
UNDEFINE MV
UNDEFINE MV_TRANS

-- ***** ACCOUNTING_PROCESS_CODE_MV - End *****

---------------------------------------------------------------
                     
-- ***** TAXCODE_MV - Start *****


DEFINE MV         = TAXCODE_MV
DEFINE MV_TRANS   = TAXCODE_TRANSLATION_MV
DEFINE TAB1       = STATUTORY_FEE_TAB
DEFINE TAB2       = COMPANY_FINANCE_TAB
DEFINE TAB_TRANS  = KEY_LU_TRANSLATION_TAB
                     
PROMPT Create Materialized View &MV 
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);   
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);
   
   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);
   
   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV 
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       AS
       SELECT a.company||''^''||a.fee_code                                     id,
              a.fee_code                                                       code,
              a.company                                                        company,
              a.description                                                    description,
              a.fee_rate                                                       fee_rate,
              a.valid_from                                                     valid_from,
              a.valid_until                                                    valid_until,
              a.fee_type                                                       fee_type,
              a.vat_received                                                   vat_received,
              a.vat_disbursed                                                  vat_disbursed,
              a.deductible                                                     deductible,
              a.multiple_tax                                                   multiple_tax,
              a.amount_not_taxable                                             amount_not_taxable,
              a.min_withheld_amount                                            min_withheld_amount,
              a.tax_amount_at_inv_print                                        tax_amount_at_inv_print,
              a.tax_amt_limit                                                  tax_amt_limit,
              a.minimum_base_amount                                            minimum_base_amount
       FROM &TAB1 a
       UNION ALL                                                                              
       SELECT company || ''^'' || ''#''                                        id,
              NULL                                                             code,
              company                                                          company,
              NULL                                                             description,                
              NULL                                                             fee_rate,                   
              NULL                                                             valid_from,                 
              NULL                                                             valid_until,                
              NULL                                                             fee_type,                
              NULL                                                             vat_received,               
              NULL                                                             vat_disbursed,              
              NULL                                                             deductible,                 
              NULL                                                             multiple_tax,                           
              NULL                                                             amount_not_taxable,
              NULL                                                             min_withheld_amount,
              NULL                                                             tax_amount_at_inv_print,    
              NULL                                                             tax_amt_limit,
              NULL                                                             minimum_base_amount
       FROM &TAB2
       UNION ALL
       SELECT ''#'' || ''^'' || ''#''                                          id,
              NULL                                                             code,
              NULL                                                             company,
              NULL                                                             description,                
              NULL                                                             fee_rate,                   
              NULL                                                             valid_from,                 
              NULL                                                             valid_until,                
              NULL                                                             fee_type,                
              NULL                                                             vat_received,               
              NULL                                                             vat_disbursed,              
              NULL                                                             deductible,                 
              NULL                                                             multiple_tax,                      
              NULL                                                             amount_not_taxable,
              NULL                                                             min_withheld_amount,
              NULL                                                             tax_amount_at_inv_print,    
              NULL                                                             tax_amt_limit,
              NULL                                                             minimum_base_amount
       FROM BI_DUAL_TAB';
      
   EXECUTE IMMEDIATE stmt_;
 
   dbms_output.put_line('Create constraint and index(s) on Materialized View &MV');
       
   constraint_name_ := table_name_||'_PK';                                  
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_SYS.Create_Constraint ( table_name_,
                               constraint_name_,
                               columns_,
                               'P',
                               '&IFSAPP_INDEX',
                                NULL,
                                TRUE,
                                TRUE);

   Installation_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_UX1';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'CODE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'U',
                               '&IFSAPP_INDEX',
                               NULL,
                               TRUE,
                               TRUE);
END;
/  

PROMPT Create Materialized View &MV_TRANS
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV_TRANS';
   index_name_      VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV_TRANS');
   Database_SYS.Remove_All_Cons_And_Idx('&MV_TRANS', TRUE);
   
   dbms_output.put_line('Drop Materialized View &MV_TRANS');
   Database_SYS.Remove_Materialized_View('&MV_TRANS', TRUE);
   
   dbms_output.put_line('Create Materialized View &MV_TRANS');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV_TRANS 
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       AS
       SELECT key_value                                 company,
              attribute_key                             translation_key,
              language_code                             language_code,
              SUBSTR(current_translation,1,100)         description,
              lu                                        lu,
              module                                    module
       FROM &TAB_TRANS
       WHERE lu     = ''StatutoryFee''
       AND module   = ''ACCRUL''
       AND key_name = ''CompanyKeyLu''
       AND rowtype  = ''CompanyKeyLuTranslation''
       AND language_code != ''PROG''';
      
   EXECUTE IMMEDIATE stmt_;
END;
/   

PROMPT Create constraints and index(s) on Materialized View &MV_TRANS
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV_TRANS';
   index_name_      VARCHAR2(30);
BEGIN   
   index_name_ := table_name_||'_IX1';
   
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'TRANSLATION_KEY');
   Database_SYS.Set_Table_Column (columns_ , 'LU');
   Database_SYS.Set_Table_Column (columns_ , 'LANGUAGE_CODE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX');
END;
/   

UNDEFINE MV 
UNDEFINE MV_TRANS
UNDEFINE TAB1
UNDEFINE TAB2
UNDEFINE TAB_TRANS

-- ***** TAXCODE_MV - End *****

-------------------------------------------------------------------

-- ***** CURRENCY_CODE_MV - Start *****                                    

DEFINE MV      = CURRENCY_CODE_MV
DEFINE TAB1    = CURRENCY_CODE_TAB
DEFINE TAB2    = COMPANY_FINANCE_TAB

PROMPT Create Materialized View &MV           
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);   
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);
   
   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);
   
   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV 
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       AS
       SELECT company||''^''||currency_code                  id,
              company                                        company,
              currency_code                                  code,
              conv_factor                                    conversion_factor,
              currency_rounding                              no_of_decimals_in_amt,
              decimals_in_rate                               no_of_decimals_in_rate,
              emu_currency_from_date                         emu_currency_from_date,
              inverted                                       inverted
       FROM &TAB1 a
       UNION ALL
       SELECT company || ''^'' || ''#''                      id,       
              company                                        company,
              NULL                                           code,
              NULL                                           conversion_factor,
              NULL                                           no_of_decimals_in_amt,   
              NULL                                           no_of_decimals_in_rate,  
              NULL                                           emu_currency_from_date,  
              NULL                                           inverted                 
       FROM &TAB2
       UNION ALL
       SELECT ''#'' || ''^'' || ''#''                        id,       
              NULL                                           company,
              NULL                                           code,
              NULL                                           conversion_factor,
              NULL                                           no_of_decimals_in_amt,   
              NULL                                           no_of_decimals_in_rate,  
              NULL                                           emu_currency_from_date,  
              NULL                                           inverted
       FROM BI_DUAL_TAB';
      
   EXECUTE IMMEDIATE stmt_;

   dbms_output.put_line('Create constraint and index(s) on Materialized View &MV');
   
   constraint_name_ := table_name_||'_PK';                                         
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_SYS.Create_Constraint ( table_name_,
                               constraint_name_,
                               columns_,
                               'P',
                               '&IFSAPP_INDEX',
                               NULL,
                               TRUE,
                               TRUE);

   Installation_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_UX1';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'CODE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'U',
                               '&IFSAPP_INDEX',
                               NULL,
                               TRUE,
                               TRUE); 
END;
/   

UNDEFINE MV  
UNDEFINE TAB1
UNDEFINE TAB2

-- ***** CURRENCY_CODE_MV - End *****

-------------------------------------------------------------------

-- ***** TAX_BOOK_MV - Start *****


DEFINE MV        = TAX_BOOK_MV
DEFINE MV_TRANS  = TAX_BOOK_TRANSLATION_MV
DEFINE TAB1      = TAX_BOOK_TAB 
DEFINE TAB2      = COMPANY_FINANCE_TAB
DEFINE TAB_TRANS = KEY_LU_TRANSLATION_TAB
  
PROMPT Create Materialized View &MV           
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);
   
   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);
   
   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV 
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       AS
       SELECT company||''^''||tax_book_id                            id,  
              tax_book_id                                            code,  
              company                                                company,    
              tax_book_id                                            tax_book_id,  
              description                                            description,
              tax_direction_sp                                       tax_direction_sp,
              tax_code                                               tax_code,
              tax_series_id                                          tax_series_id
       FROM &TAB1 
       UNION ALL         
       SELECT company || ''^'' || ''#''                              id, 
              NULL                                                   code,
              company                                                company,
              NULL                                                   tax_book_id,
              NULL                                                   description,
              NULL                                                   tax_direction_sp,
              NULL                                                   tax_code,
              NULL                                                   tax_series_id
       FROM &TAB2
       UNION ALL         
       SELECT ''#'' || ''^'' || ''#''                                id, 
              NULL                                                   code,
              NULL                                                   company,
              NULL                                                   tax_book_id,
              NULL                                                   description,
              NULL                                                   tax_direction_sp,
              NULL                                                   tax_code,
              NULL                                                   tax_series_id
       FROM BI_DUAL_TAB';
      
   EXECUTE IMMEDIATE stmt_;
END;
/
    
PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_Sys.Create_Constraint(table_name_,
                                  constraint_name_,
                                  columns_,
                                  'P',
                                  '&IFSAPP_INDEX',
                                  NULL,
                                  TRUE,
                                  TRUE);
   Installation_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_UX1';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'CODE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'U',
                               '&IFSAPP_INDEX',
                               NULL,
                               TRUE,
                               TRUE);
END;
/   

PROMPT Create Materialized View &MV_TRANS 
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV_TRANS';
   index_name_      VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV_TRANS');
   Database_SYS.Remove_All_Cons_And_Idx('&MV_TRANS', TRUE);
   
   dbms_output.put_line('Drop Materialized View &MV_TRANS');
   Database_SYS.Remove_Materialized_View('&MV_TRANS', TRUE);
   
   dbms_output.put_line('Create Materialized View &MV_TRANS');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV_TRANS 
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       AS
       SELECT key_value                                 company,
              attribute_key                             translation_key,
              language_code                             language_code,
              SUBSTR(current_translation,1,100)         description,
              lu                                        lu,
              module                                    module
       FROM &TAB_TRANS
       WHERE lu     = ''TaxBook''
       AND module   = ''ACCRUL''
       AND key_name = ''CompanyKeyLu''
       AND rowtype  = ''CompanyKeyLuTranslation''
       AND language_code != ''PROG''';
      
   EXECUTE IMMEDIATE stmt_;
END;
/ 
   
PROMPT Create constraints and index(s) on Materialized View &MV_TRANS
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV_TRANS';
   index_name_      VARCHAR2(30);
BEGIN   
      index_name_ := table_name_||'_IX1';
   
      Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
      Database_SYS.Set_Table_Column (columns_ , 'TRANSLATION_KEY');
      Database_SYS.Set_Table_Column (columns_ , 'LU');
      Database_SYS.Set_Table_Column (columns_ , 'LANGUAGE_CODE');
      Database_SYS.Create_Index ( table_name_,
                                  index_name_,
                                  columns_,
                                  'N',
                                  '&IFSAPP_INDEX');
END;
/   

UNDEFINE MV  
UNDEFINE MV_TRANS    
UNDEFINE TAB1
UNDEFINE TAB2
UNDEFINE TAB_TRANS

-- ***** TAX_BOOK_MV - End *****

-------------------------------------------------------------------

-- ***** SUBSIDIARY_COMPANY_MV - Start *****

DEFINE MV      = SUBSIDIARY_COMPANY_MV                            

PROMPT Create Materialized view &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
BEGIN    
      dbms_output.put_line('Primary key cascade drop ON &MV');
      Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);
   
      dbms_output.put_line('Drop Materialized View &MV');
      Database_SYS.Remove_Materialized_View('&MV', TRUE);
   
      dbms_output.put_line('Create Materialized View &MV');
      stmt_ :=
      'CREATE MATERIALIZED VIEW &MV 
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       AS
       SELECT  a.cons_company||''^''||a.company                    id,       
               a.cons_company                                      company,  
               a.company                                           code,
               a.currency_code                                     subsidiary_currency_code,
               a.parallel_acc_currency                             subsidiary_parallel_curr_code             
       FROM COMPANY_FINANCE_TAB a
       WHERE a.cons_company IS NOT NULL
       UNION ALL
       SELECT  a.company||''^''||''#''                             id,
               a.company                                           company,
               NULL                                                code,
               NULL                                                subsidiary_currency_code,
               NULL                                                subsidiary_parallel_curr_code
       FROM COMPANY_FINANCE_TAB a
       UNION ALL
       SELECT  ''#''||''^''||''#''                                 id,
               NULL                                                company,
               NULL                                                code,
               NULL                                                subsidiary_currency_code,
               NULL                                                subsidiary_parallel_curr_code
       FROM BI_DUAL_TAB';

      EXECUTE IMMEDIATE stmt_;
   
      dbms_output.put_line('Create constraint and index(s) on Materialized View &MV');

      index_name_ := table_name_||'_PK';
      Database_SYS.Set_Table_Column (columns_ , 'ID');
      Database_SYS.Create_Constraint ( table_name_,
                                       index_name_,
                                       columns_,
                                       'P',
                                       '&IFSAPP_INDEX',
                                       NULL,
                                       TRUE,
                                       TRUE);
   
      Installation_SYS.Reset_Column_Table(columns_);

      index_name_ := table_name_ || '_UX1';
      Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
      Database_SYS.Set_Table_Column (columns_ , 'CODE');
      Database_Sys.Create_Index( table_name_,
                                 index_name_,
                                 columns_,
                                 'U',
                                 '&IFSAPP_INDEX',
                                 NULL,
                                 TRUE,
                                 TRUE);
END;
/   

UNDEFINE MV

-- ***** SUBSIDIARY_COMPANY_MV - End *****

-----------------------------------------------------------------------------

-- ***** CURRENCY_RATE_MV - Start *****

DEFINE MV       = CURRENCY_RATE_MV

PROMPT Create Materialized view &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);

BEGIN
      dbms_output.put_line('Primary key cascade drop ON &MV');
      Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

      dbms_output.put_line('Drop Materialized View &MV');
      Database_SYS.Remove_Materialized_View('&MV', TRUE);

      dbms_output.put_line('Create Materialized View &MV');
      stmt_ :=
      'CREATE MATERIALIZED VIEW &MV 
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       AS                                                         
       SELECT 
        cr.company_key                                            company_key,
        cr.valid_from_key                                         valid_from_key,
        cr.currency_rate_type_key                                 currency_rate_type_key,
        cr.currency_code_key                                      currency_code_key,
        cr.currency_rate                                          currency_rate,          
        cr.valid_from                                             valid_from,
        cr.is_max_valid_from                                      is_max_valid_from,
        cr.valid_until                                            valid_until,
        cr.dim_company_id                                         dim_company_id,
        cr.dim_currency_code_id                                   dim_currency_code_id,
        cr.dim_currency_rate_type_id                              dim_currency_rate_type_id,
        cr.currency_code                                          currency_code,
        cr.currency_type                                          currency_type           
      FROM currency_rate_mv_hlp cr '; 
           
      EXECUTE IMMEDIATE stmt_;

      constraint_name_ := table_name_ || '_PK';
      Database_SYS.Set_Table_Column (columns_ , 'COMPANY_KEY');
      Database_SYS.Set_Table_Column (columns_ , 'VALID_FROM_KEY');
      Database_SYS.Set_Table_Column (columns_ , 'CURRENCY_RATE_TYPE_KEY');
      Database_SYS.Set_Table_Column (columns_ , 'CURRENCY_CODE_KEY');
      Database_Sys.Create_Constraint(table_name_,
                                     constraint_name_,
                                     columns_,
                                     'P',
                                     '&IFSAPP_INDEX',
                                     NULL,
                                     TRUE,
                                     TRUE);
      Installation_SYS.Reset_Column_Table(columns_);

      index_name_ := table_name_||'_IX1';
      Database_SYS.Set_Table_Column (columns_ , 'DIM_COMPANY_ID');
      Database_SYS.Create_Index ( table_name_,
                                  index_name_,
                                  columns_,
                                  'N',
                                  '&IFSAPP_INDEX',
                                  NULL,
                                  TRUE,
                                  TRUE);
      Installation_SYS.Reset_Column_Table(columns_);

      index_name_ := table_name_||'_IX2';
      Database_SYS.Set_Table_Column (columns_ , 'DIM_COMPANY_ID');
      Database_SYS.Set_Table_Column (columns_ , 'DIM_CURRENCY_CODE_ID');
      Database_SYS.Set_Table_Column (columns_ , 'DIM_CURRENCY_RATE_TYPE_ID');
      Database_SYS.Create_Index ( table_name_,
                                  index_name_,
                                  columns_,
                                  'N',
                                  '&IFSAPP_INDEX',
                                  NULL,
                                  TRUE,
                                  TRUE);                                            
END;
/   

UNDEFINE MV

-- ***** CURRENCY_RATE_MV - End *****

------------------------------------------------------------------

-- ***** CURRENCY_RATE_TYPE_MV - Start *****

DEFINE MV                       = CURRENCY_RATE_TYPE_MV

PROMPT Create Materialized view &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN      
      dbms_output.put_line('Primary key cascade drop ON &MV');
      Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);
   
      dbms_output.put_line('Drop Materialized View &MV');
      Database_SYS.Remove_Materialized_View('&MV', TRUE);
   
      dbms_output.put_line('Create Materialized View &MV');
      stmt_ :=
      'CREATE MATERIALIZED VIEW &MV 
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       AS
          SELECT company||''^''||currency_type               id,
              company                                        company,
              currency_type                                  code,
              description                                    description,
              ref_currency_code                              ref_currency_code,
              type_default                                   type_default
          FROM CURRENCY_TYPE_TAB 
          UNION ALL
          SELECT company || ''^'' || ''#''                   id,       
              company                                        company,
              NULL                                           code,
              NULL                                           description,   
              NULL                                           ref_currency_code,  
              NULL                                           type_default               
          FROM COMPANY_FINANCE_TAB
          UNION ALL
          SELECT  ''#''||''^''||''#''                        id,
              NULL                                           company,
              NULL                                           code,
              NULL                                           description,
              NULL                                           ref_currency_code,
              NULL                                           type_default
          FROM BI_DUAL_TAB';

      
      EXECUTE IMMEDIATE stmt_;
   
      dbms_output.put_line('Create constraint and index(s) on Materialized View &MV');
   
      constraint_name_ := table_name_ || '_PK';
      Database_SYS.Set_Table_Column (columns_ , 'ID');
      Database_SYS.Create_Constraint( table_name_,
                                  constraint_name_,
                                  columns_,
                                  'P',
                                  '&IFSAPP_INDEX',
                                  NULL,
                                  TRUE,
                                  TRUE);
      Installation_SYS.Reset_Column_Table(columns_);
   
      index_name_ := table_name_||'_UX1';
      Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
      Database_SYS.Set_Table_Column (columns_ , 'CODE');
      Database_SYS.Create_Index ( table_name_,
                                  index_name_,
                                  columns_,
                                  'U',
                                  '&IFSAPP_INDEX',
                                  NULL,
                                  TRUE,
                                  TRUE); 
END;
/   

UNDEFINE MV

-- ***** CURRENCY_RATE_TYPE_MV - End *****

------------------------------------------------------------------

-- ***** RPD_PERIOD_MV - Start *****    
DEFINE TABLE_RPD             = RPD_IDENTITY_TAB
DEFINE TABLE_RPD_PERIOD      = RPD_PERIOD_TAB
DEFINE TABLE_RPD_YEAR        = RPD_YEAR_TAB
DEFINE TABLE_RPD_PERIOD_DET  = RPD_PERIOD_DETAIL_TAB
DEFINE TABLE_BI_DUAL         = BI_DUAL_TAB
DEFINE MV                    = RPD_PERIOD_MV


PROMPT Create Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);
   
   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);
   
   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV 
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       AS
       SELECT 
           d.REPORTING_DATE                 ID, 
           d.RPD_ID || ''^'' || 
           TO_CHAR(d.REPORTING_DATE, ''YYYY-MM-DD'', ''NLS_CALENDAR=Gregorian'')
                                            ID_WITH_RPD_ID,
           d.REPORTING_DATE                 CODE,
           d.RPD_ID                         RPD_ID, 
           d.RPD_YEAR                       RPD_YEAR, 
           d.RPD_PERIOD                     RPD_PERIOD, 
           d.REPORTING_DATE                 REPORTING_DATE, 
           i.DESCRIPTION                    RPD_ID_DESCRIPTION,
           p.FROM_DATE                      FROM_DATE,
           p.UNTIL_DATE                     UNTIL_DATE,
           p.YEAR_PERIOD_NUM                YEAR_PERIOD_NUM,
           p.YEAR_PERIOD_STR                YEAR_PERIOD_STR,
           p.STRING_ATTRIBUTE1              STRING_ATTRIBUTE1,     
           p.STRING_ATTRIBUTE2              STRING_ATTRIBUTE2,
           p.STRING_ATTRIBUTE3              STRING_ATTRIBUTE3,
           p.STRING_ATTRIBUTE4              STRING_ATTRIBUTE4,
           p.STRING_ATTRIBUTE5              STRING_ATTRIBUTE5,
           p.NUMBER_ATTRIBUTE1              NUMBER_ATTRIBUTE1,
           p.NUMBER_ATTRIBUTE2              NUMBER_ATTRIBUTE2,
           p.NUMBER_ATTRIBUTE3              NUMBER_ATTRIBUTE3,
           p.NUMBER_ATTRIBUTE4              NUMBER_ATTRIBUTE4,
           p.NUMBER_ATTRIBUTE5              NUMBER_ATTRIBUTE5           
      FROM  &TABLE_RPD i, &TABLE_RPD_PERIOD p, &TABLE_RPD_PERIOD_DET d
      WHERE i.RPD_ID     = d.RPD_ID
        AND p.RPD_ID     = d.RPD_ID
        AND p.RPD_YEAR   = d.RPD_YEAR
        AND p.RPD_PERIOD = d.RPD_PERIOD
      UNION ALL
      SELECT 
           TO_DATE(''1900-01-01'',
                   ''YYYY-MM-DD'', 
                   ''NLS_CALENDAR=Gregorian'')   
                                           ID, 
           ''#^#''                         ID_WITH_RPD_ID,
           NULL                            CODE,
           NULL                            RPD_ID, 
           NULL                            RPD_YEAR, 
           NULL                            RPD_PERIOD, 
           NULL                            REPORTING_DATE, 
           NULL                            RPD_ID_DESCRIPTION,
           NULL                            FROM_DATE,
           NULL                            UNTIL_DATE,
           NULL                            YEAR_PERIOD_NUM,
           NULL                            YEAR_PERIOD_STR,
           NULL                            STRING_ATTRIBUTE1,     
           NULL                            STRING_ATTRIBUTE2,
           NULL                            STRING_ATTRIBUTE3,
           NULL                            STRING_ATTRIBUTE4,
           NULL                            STRING_ATTRIBUTE5,
           NULL                            NUMBER_ATTRIBUTE1,
           NULL                            NUMBER_ATTRIBUTE2,
           NULL                            NUMBER_ATTRIBUTE3,
           NULL                            NUMBER_ATTRIBUTE4,
           NULL                            NUMBER_ATTRIBUTE5           
      FROM  &TABLE_BI_DUAL';
      
   EXECUTE IMMEDIATE stmt_;
END;
/


PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
BEGIN
   index_name_ := table_name_||'_UX1';
   Database_SYS.Set_Table_Column (columns_ , 'RPD_ID');
   Database_SYS.Set_Table_Column (columns_ , 'REPORTING_DATE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',                               
                               NULL,
                               TRUE,
                               TRUE);
   Installation_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_IX1';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',
                               NULL,
                               TRUE,
                               TRUE);

   Installation_SYS.Reset_Column_Table(columns_);  

   index_name_ := table_name_||'_IX2';
   Database_SYS.Set_Table_Column (columns_ , 'CODE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',                               
                               NULL,
                               TRUE,
                               TRUE);

   Installation_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_IX3';
   Database_SYS.Set_Table_Column (columns_ , 'RPD_ID');
   Database_SYS.Set_Table_Column (columns_ , 'RPD_YEAR');
   Database_SYS.Set_Table_Column (columns_ , 'RPD_PERIOD');
   Database_SYS.Set_Table_Column (columns_ , 'REPORTING_DATE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',                               
                               NULL,
                               TRUE,
                               TRUE);

   Installation_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_IX4';
   Database_SYS.Set_Table_Column (columns_ , 'ID_WITH_RPD_ID');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',                               
                               NULL,
                               TRUE,
                               TRUE);
END;
/   

UNDEFINE TABLE_RPD
UNDEFINE TABLE_RPD_PERIOD
UNDEFINE TABLE_RPD_PERIOD_DET
UNDEFINE TABLE_RPD_YEAR
UNDEFINE TABLE_BI_DUAL
UNDEFINE MV

-- ***** RPD_PERIOD_MV - End *****

-----------------------------------------------------------------------------
-- ***** RPD_COMPANY_PERIOD_MV - Start *****    

DEFINE TABLE_RPD_COMPANY = RPD_COMPANY_TAB
DEFINE TABLE_RPD_COM_DET = RPD_COMPANY_PERIOD_DET_TAB
DEFINE TABLE_RPD         = RPD_IDENTITY_TAB
DEFINE TABLE_RPD_PERIOD  = RPD_PERIOD_TAB
DEFINE TABLE_RPD_YEAR     = RPD_YEAR_TAB
DEFINE TABLE_BI_DUAL     = BI_DUAL_TAB
DEFINE TABLE_COMPANY     = COMPANY_FINANCE_TAB
DEFINE MV                = RPD_COMPANY_PERIOD_MV


PROMPT Create Materialized View &MV

DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);
   
   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);
   
   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV 
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       AS
       SELECT 
           d.COMPANY                    || ''^'' ||
           TO_CHAR(d.ACCOUNTING_DATE, ''YYYY-MM-DD'')
                                              ID, 
           d.COMPANY                    || ''^'' ||
           TO_CHAR(d.REPORTING_DATE, ''YYYY-MM-DD'')
                                              ALT_DIM_ID,
           d.RPD_ID                     || ''^'' ||
           d.COMPANY                    || ''^'' ||
           TO_CHAR(d.ACCOUNTING_DATE, ''YYYY-MM-DD'', ''NLS_CALENDAR=Gregorian'')
                                              ID_WITH_RPD_ID, 
           d.RPD_ID                     || ''^'' ||
           d.COMPANY                    || ''^'' ||
           TO_CHAR(d.REPORTING_DATE, ''YYYY-MM-DD'', ''NLS_CALENDAR=Gregorian'')
                                              ALT_DIM_ID_WITH_RPD_ID,
           d.REPORTING_DATE                   CODE,
           d.RPD_ID                           RPD_ID, 
           d.COMPANY                          COMPANY, 
           d.RPD_YEAR                         RPD_YEAR, 
           d.RPD_PERIOD                       RPD_PERIOD, 
           d.REPORTING_DATE                   REPORTING_DATE,
           d.ACCOUNTING_DATE                  ACCOUNTING_DATE,
           i.DESCRIPTION                      RPD_ID_DESCRIPTION,
           p.FROM_DATE                        FROM_DATE,
           p.UNTIL_DATE                       UNTIL_DATE,
           p.YEAR_PERIOD_NUM                  YEAR_PERIOD_NUM,
           p.YEAR_PERIOD_STR                  YEAR_PERIOD_STR,
           p.STRING_ATTRIBUTE1                STRING_ATTRIBUTE1,     
           p.STRING_ATTRIBUTE2                STRING_ATTRIBUTE2,
           p.STRING_ATTRIBUTE3                STRING_ATTRIBUTE3,
           p.STRING_ATTRIBUTE4                STRING_ATTRIBUTE4,
           p.STRING_ATTRIBUTE5                STRING_ATTRIBUTE5,
           p.NUMBER_ATTRIBUTE1                NUMBER_ATTRIBUTE1,
           p.NUMBER_ATTRIBUTE2                NUMBER_ATTRIBUTE2,
           p.NUMBER_ATTRIBUTE3                NUMBER_ATTRIBUTE3,
           p.NUMBER_ATTRIBUTE4                NUMBER_ATTRIBUTE4,
           p.NUMBER_ATTRIBUTE5                NUMBER_ATTRIBUTE5                
       FROM  &TABLE_RPD_COM_DET d, &TABLE_RPD i, &TABLE_RPD_PERIOD p
       WHERE i.RPD_ID     = d.RPD_ID
         AND p.RPD_ID     = d.RPD_ID
         AND p.RPD_YEAR   = d.RPD_YEAR
         AND p.RPD_PERIOD = d.RPD_PERIOD
      UNION ALL
      SELECT 
           ''#^#''                            ID, 
           ''#^#''                            ALT_DIM_ID,
           ''#^#^#''                          ID_WITH_RPD_ID, 
           ''#^#^#''                          ALT_DIM_ID_WITH_RPD_ID,
           NULL                               CODE,
           NULL                               RPD_ID, 
           NULL                               COMPANY, 
           NULL                               RPD_YEAR, 
           NULL                               RPD_PERIOD, 
           NULL                               REPORTING_DATE,
           NULL                               ACCOUNTING_DATE,
           NULL                               RPD_ID_DESCRIPTION,
           NULL                               FROM_DATE,
           NULL                               UNTIL_DATE,
           NULL                               YEAR_PERIOD_NUM,
           NULL                               YEAR_PERIOD_STR,
           NULL                               STRING_ATTRIBUTE1,     
           NULL                               STRING_ATTRIBUTE2,
           NULL                               STRING_ATTRIBUTE3,
           NULL                               STRING_ATTRIBUTE4,
           NULL                               STRING_ATTRIBUTE5,
           NULL                               NUMBER_ATTRIBUTE1,
           NULL                               NUMBER_ATTRIBUTE2,
           NULL                               NUMBER_ATTRIBUTE3,
           NULL                               NUMBER_ATTRIBUTE4,
           NULL                               NUMBER_ATTRIBUTE5           
      FROM  &TABLE_BI_DUAL
      UNION ALL
      SELECT 
           c.COMPANY || ''^#''
                                              ID, 
           c.COMPANY || ''^#''    
                                              ALT_DIM_ID,
           ''#^#^#''                          ID_WITH_RPD_ID, 
           ''#^#^#''                          ALT_DIM_ID_WITH_RPD_ID,
           NULL                               CODE,
           NULL                               RPD_ID, 
           NULL                               COMPANY, 
           NULL                               RPD_YEAR, 
           NULL                               RPD_PERIOD, 
           NULL                               REPORTING_DATE,
           NULL                               ACCOUNTING_DATE,
           NULL                               RPD_ID_DESCRIPTION,
           NULL                               FROM_DATE,
           NULL                               UNTIL_DATE,
           NULL                               YEAR_PERIOD_NUM,
           NULL                               YEAR_PERIOD_STR,
           NULL                               STRING_ATTRIBUTE1,     
           NULL                               STRING_ATTRIBUTE2,
           NULL                               STRING_ATTRIBUTE3,
           NULL                               STRING_ATTRIBUTE4,
           NULL                               STRING_ATTRIBUTE5,
           NULL                               NUMBER_ATTRIBUTE1,
           NULL                               NUMBER_ATTRIBUTE2,
           NULL                               NUMBER_ATTRIBUTE3,
           NULL                               NUMBER_ATTRIBUTE4,
           NULL                               NUMBER_ATTRIBUTE5           
      FROM  &TABLE_COMPANY c
      UNION ALL
      SELECT 
           NULL                               ID, 
           NULL                               ALT_DIM_ID,
           r.RPD_ID || ''^#^#''               ID_WITH_RPD_ID, 
           r.RPD_ID || ''^#^#''               ALT_DIM_ID_WITH_RPD_ID,
           NULL                               CODE,
           NULL                               RPD_ID, 
           NULL                               COMPANY, 
           NULL                               RPD_YEAR, 
           NULL                               RPD_PERIOD, 
           NULL                               REPORTING_DATE,
           NULL                               ACCOUNTING_DATE,
           NULL                               RPD_ID_DESCRIPTION,
           NULL                               FROM_DATE,
           NULL                               UNTIL_DATE,
           NULL                               YEAR_PERIOD_NUM,
           NULL                               YEAR_PERIOD_STR,
           NULL                               STRING_ATTRIBUTE1,     
           NULL                               STRING_ATTRIBUTE2,
           NULL                               STRING_ATTRIBUTE3,
           NULL                               STRING_ATTRIBUTE4,
           NULL                               STRING_ATTRIBUTE5,
           NULL                               NUMBER_ATTRIBUTE1,
           NULL                               NUMBER_ATTRIBUTE2,
           NULL                               NUMBER_ATTRIBUTE3,
           NULL                               NUMBER_ATTRIBUTE4,
           NULL                               NUMBER_ATTRIBUTE5           
      FROM  &TABLE_RPD r';
      
   EXECUTE IMMEDIATE stmt_;
END;
/


PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
BEGIN
   index_name_ := table_name_||'_UX1';
   Database_SYS.Set_Table_Column (columns_ , 'RPD_ID');
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'REPORTING_DATE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',                               
                               NULL,
                               TRUE,
                               TRUE);
   Installation_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_IX1';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',
                               NULL,
                               TRUE,
                               TRUE);

   Installation_SYS.Reset_Column_Table(columns_);  

   index_name_ := table_name_||'_IX2';
   Database_SYS.Set_Table_Column (columns_ , 'ALT_DIM_ID');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',                               
                               NULL,
                               TRUE,
                               TRUE);

   Installation_SYS.Reset_Column_Table(columns_);  

   index_name_ := table_name_||'_IX3';
   Database_SYS.Set_Table_Column (columns_ , 'CODE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',                               
                               NULL,
                               TRUE,
                               TRUE);

   Installation_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_IX4';
   Database_SYS.Set_Table_Column (columns_ , 'RPD_ID');
   Database_SYS.Set_Table_Column (columns_ , 'RPD_YEAR');
   Database_SYS.Set_Table_Column (columns_ , 'RPD_PERIOD');
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'REPORTING_DATE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',                               
                               NULL,
                               TRUE,
                               TRUE);
   
   Installation_SYS.Reset_Column_Table(columns_);  

   index_name_ := table_name_||'_IX5';
   Database_SYS.Set_Table_Column (columns_ , 'RPD_ID');
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'CODE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',                               
                               NULL,
                               TRUE,
                               TRUE);

   Installation_SYS.Reset_Column_Table(columns_);  

   index_name_ := table_name_||'_IX6';
   Database_SYS.Set_Table_Column (columns_ , 'RPD_ID');
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'ACCOUNTING_DATE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',                               
                               NULL,
                               TRUE,
                               TRUE);
   
   Installation_SYS.Reset_Column_Table(columns_);  

   index_name_ := table_name_||'_IX7';
   Database_SYS.Set_Table_Column (columns_ , 'ID_WITH_RPD_ID');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',                               
                               NULL,
                               TRUE,
                               TRUE);

   Installation_SYS.Reset_Column_Table(columns_);  

   index_name_ := table_name_||'_IX8';
   Database_SYS.Set_Table_Column (columns_ , 'ALT_DIM_ID_WITH_RPD_ID');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',                               
                               NULL,
                               TRUE,
                               TRUE);


   
END;
/   

UNDEFINE TABLE_RPD_COMPANY 
UNDEFINE TABLE_RPD_COM_DET 
UNDEFINE TABLE_RPD        
UNDEFINE TABLE_RPD_PERIOD  
UNDEFINE TABLE_RPD_YEAR
UNDEFINE TABLE_BI_DUAL
UNDEFINE TABLE_COMPANY
UNDEFINE MV                

-- ***** RPD_COMPANY_PERIOD_MV - End *****

-- ***** CURRENCY_RATE_MV- Start *****

DEFINE MV               = CURRENCY_RATE_MV

PROMPT Create Materialized view &MV
DECLARE
   sub_section_     NUMBER:=1001;
   string_          VARCHAR2(4000);
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);

   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
   'CREATE MATERIALIZED VIEW &MV 
    TABLESPACE &IFSAPP_DATA
    BUILD DEFERRED
    USING NO INDEX
    REFRESH COMPLETE ON DEMAND
    AS                                                         
    SELECT 
     cr.company_key                                            company_key,
     cr.valid_from_key                                         valid_from_key,
     cr.currency_rate_type_key                                 currency_rate_type_key,
     cr.currency_code_key                                      currency_code_key,
     cr.currency_rate                                          currency_rate,          
     cr.valid_from                                             valid_from,
     cr.direct_currency_rate                                   direct_currency_rate,          
     cr.direct_currency_rate_round                             direct_currency_rate_round,          
     cr.is_max_valid_from                                      is_max_valid_from,
     cr.valid_until                                            valid_until,
     cr.dim_company_id                                         dim_company_id,
     cr.dim_currency_code_id                                   dim_currency_code_id,
     cr.dim_currency_rate_type_id                              dim_currency_rate_type_id,
     cr.currency_code                                          currency_code,
     cr.currency_type                                          currency_type           
   FROM currency_rate_mv_hlp cr '; 
        
   EXECUTE IMMEDIATE stmt_;

   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY_KEY');
   Database_SYS.Set_Table_Column (columns_ , 'VALID_FROM_KEY');
   Database_SYS.Set_Table_Column (columns_ , 'CURRENCY_RATE_TYPE_KEY');
   Database_SYS.Set_Table_Column (columns_ , 'CURRENCY_CODE_KEY');
   Database_Sys.Create_Constraint(table_name_,
                                  constraint_name_,
                                  columns_,
                                  'P',
                                  '&IFSAPP_INDEX',
                                  NULL,
                                  TRUE,
                                  TRUE);
   Installation_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_IX1';
   Database_SYS.Set_Table_Column (columns_ , 'DIM_COMPANY_ID');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',
                               NULL,
                               TRUE,
                               TRUE);
   Installation_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_IX2';
   Database_SYS.Set_Table_Column (columns_ , 'DIM_COMPANY_ID');
   Database_SYS.Set_Table_Column (columns_ , 'DIM_CURRENCY_CODE_ID');
   Database_SYS.Set_Table_Column (columns_ , 'DIM_CURRENCY_RATE_TYPE_ID');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',
                               NULL,
                               TRUE,
                               TRUE);                                                        
END;
/

UNDEFINE MV
-- ***** CURRENCY_RATE_MV- End *****


-----------------------------------------------------------------------------

