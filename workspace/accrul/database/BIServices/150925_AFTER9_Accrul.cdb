-----------------------------------------------------------------------------
--  Module : ACCRUL
--
--  File   : 150925_AFTER9_Accrul.cdb
--
--  IFS Developer Studio Template Version 2.6
--
--  Date     Sign    History
--  ------   ------  --------------------------------------------------
--  150508   umdolk  Created
--  ------   ------  --------------------------------------------------
-----------------------------------------------------------------------------

DEFINE MODULE           = ACCRUL
DEFINE PATCH_DATE       = 150925
DEFINE PATCH_ID         = AFTER9
DEFINE FILE_NAME        = &PATCH_DATE._&PATCH_ID._&MODULE..CDB

SET SERVEROUTPUT ON
PROMPT Starting &FILE_NAME

---------------------------------------------------------------------
-- CREATE CURRENCY_CODE_CHK_MV
---------------------------------------------------------------------

DEFINE MV_NAME       = CURRENCY_CODE_CHK_MV
DEFINE SOURCE_TABLE  = CURRENCY_CODE_TAB

PROMPT Creating view CURRENCY_CODE_CHK_MV
DECLARE
   sub_section_  NUMBER:=1001;
   string_       VARCHAR2(4000);
BEGIN
   Installation_SYS.Log_Detail_Time_Stamp('&MODULE', '&FILE_NAME', ('Timestamp_'||sub_section_));
   IF NOT (Db_Script_Register_Detail_API.Is_Sub_Section_Registered('&MODULE', '&PATCH_ID', sub_section_)) THEN
      
      DECLARE
         stmt_            VARCHAR2(32000);
      BEGIN
         Database_SYS.Remove_Materialized_View('&MV_NAME',TRUE);
         stmt_ :=    
            'CREATE MATERIALIZED VIEW &MV_NAME
             BUILD DEFERRED
             USING NO INDEX
             REFRESH COMPLETE ON DEMAND
             AS
             SELECT MAX(ROWVERSION) MAX_ROWVERSION
             FROM &SOURCE_TABLE';

         EXECUTE IMMEDIATE stmt_;  

         IS_MV_REFRESH_INFO_API.Clear_Refresh_Info('&MV_NAME');
      END;
      
      Db_Script_Register_Detail_API.Register_Sub_Section(
         '&MODULE', 
         '&PATCH_ID',
         sub_section_,
         'TRUE',
         file_name_ => '&FILE_NAME');
   END IF;   
EXCEPTION
   WHEN OTHERS THEN
      string_ := 'Oratext is: '|| SQLERRM||' >>>';
      Db_Script_Register_Detail_API.Register_Sub_Section(
         '&MODULE', 
         '&PATCH_ID',
         sub_section_,
         'FALSE',
         string_,
         '&FILE_NAME');
      RAISE;
END;
/

PROMPT VIEW &MV_NAME created.
UNDEFINE MV_NAME
UNDEFINE SOURCE_TABLE

---------------------------------------------------------------------
-- CREATE COMPANY_FINANCE_MV
---------------------------------------------------------------------
DEFINE MV         = COMPANY_FINANCE_MV
DEFINE TAB1       = COMPANY_FINANCE_TAB

PROMPT Create Materialized View COMPANY_FINANCE_MV
DECLARE
   sub_section_  NUMBER:=1002;
   string_       VARCHAR2(4000);
BEGIN
   Installation_SYS.Log_Detail_Time_Stamp('&MODULE', '&FILE_NAME', ('Timestamp_'||sub_section_));
   IF NOT (Db_Script_Register_Detail_API.Is_Sub_Section_Registered('&MODULE', '&PATCH_ID', sub_section_)) THEN
      
      DECLARE
         stmt_            VARCHAR2(32000);
         columns_         Database_SYS.ColumnTabType;
         table_name_      VARCHAR2(30) := '&MV';
         index_name_      VARCHAR2(30);
         constraint_name_ VARCHAR2(30);
      BEGIN
         dbms_output.put_line('Primary key cascade drop ON &MV');
         Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

         dbms_output.put_line('Drop Materialized View &MV');
         Database_SYS.Remove_Materialized_View('&MV', TRUE);

         dbms_output.put_line('Create Materialized View &MV');
         stmt_ :=
            'CREATE MATERIALIZED VIEW &MV
             TABLESPACE &IFSAPP_DATA
             BUILD DEFERRED
             USING NO INDEX
             REFRESH COMPLETE ON DEMAND
             AS
             SELECT cf.company               id,
                    cf.company               code,
                    c.name                   name,
                    c.country                country_code,
                    c.association_no         association_no,
                    cf.cons_company          parent_company,
                    cf.currency_code         currency_code,
                    cf.parallel_acc_currency parallel_currency_code,
                    c.master_company         master_company
             FROM   COMPANY_FINANCE_TAB cf, COMPANY_TAB c
             WHERE cf.company = c.company       
             UNION ALL
             SELECT ''#''                    id,
                    NULL                     code,
                    NULL                     name,
                    NULL                     country_code,
                    NULL                     association_no,
                    NULL                     parent_company,
                    NULL                     currency_code,
                    NULL                     parallel_currency_code,
                    NULL                     master_company
             FROM BI_DUAL_TAB
          ';
         EXECUTE IMMEDIATE stmt_;
      END;
      
      Db_Script_Register_Detail_API.Register_Sub_Section(
         '&MODULE', 
         '&PATCH_ID',
         sub_section_,
         'TRUE',
         file_name_ => '&FILE_NAME');
   END IF;   
EXCEPTION
   WHEN OTHERS THEN
      string_ := 'Oratext is: '|| SQLERRM||' >>>';
      Db_Script_Register_Detail_API.Register_Sub_Section(
         '&MODULE', 
         '&PATCH_ID',
         sub_section_,
         'FALSE',
         string_,
         '&FILE_NAME');
      RAISE;
END;
/

--------------------------------------------------------------
----------Create constraints and index(s) on Materialized VIEW
--------------------------------------------------------------

PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   sub_section_  NUMBER:=1003;
   string_       VARCHAR2(4000);
BEGIN  
   Installation_SYS.Log_Detail_Time_Stamp('&MODULE', '&FILE_NAME', ('Timestamp_'||sub_section_));   
   IF NOT (Db_Script_Register_Detail_API.Is_Sub_Section_Registered('&MODULE', '&PATCH_ID', sub_section_)) THEN 
      DECLARE
         columns_         Database_SYS.ColumnTabType;
         table_name_      VARCHAR2(30) := '&MV';
         index_name_      VARCHAR2(30);
         constraint_name_ VARCHAR2(30);
      BEGIN
         constraint_name_ := table_name_ || '_PK';
         Database_SYS.Set_Table_Column (columns_ , 'ID');
         Database_Sys.Create_Constraint(table_name_,
                                        constraint_name_,
                                        columns_,
                                        'P',
                                        '&IFSAPP_INDEX',
                                        NULL,
                                        TRUE,
                                        TRUE);

         Installation_SYS.Reset_Column_Table(columns_);
         
         index_name_ := table_name_ || '_UX1';
         Database_SYS.Set_Table_Column (columns_ , 'CODE');
         Database_Sys.Create_Index( table_name_,
                                    index_name_,
                                    columns_,
                                    'U',
                                    '&IFSAPP_INDEX',
                                    NULL,
                                    TRUE,
                                    TRUE);
      END;
      
      Db_Script_Register_Detail_API.Register_Sub_Section(
         '&MODULE', 
         '&PATCH_ID',
         sub_section_,
         'TRUE',
         file_name_ => '&FILE_NAME');
   END IF;   
EXCEPTION
   WHEN OTHERS THEN
      string_ := 'Oratext is: '|| SQLERRM||' >>>';
      Db_Script_Register_Detail_API.Register_Sub_Section(
         '&MODULE', 
         '&PATCH_ID',
         sub_section_,
         'FALSE',
         string_,
         '&FILE_NAME');
      RAISE;
END;
/

UNDEFINE MV
UNDEFINE TAB1
UNDEFINE TAB2

---------------------------------------------------------------------
-- CREATE ANALYTIC_ATTR_ACCOUNT_MV
---------------------------------------------------------------------
DEFINE MV         = ANALYTIC_ATTR_ACCOUNT_MV
DEFINE TAB1       = ANALYTIC_ATTR_ACCOUNT_TAB
DEFINE TAB2       = COMPANY_FINANCE_TAB
DEFINE CODE_PART  = A

PROMPT Create Materialized View ANALYTIC_ATTR_ACCOUNT_MV
DECLARE
   sub_section_  NUMBER:=1004;
   string_       VARCHAR2(4000);
BEGIN
   Installation_SYS.Log_Detail_Time_Stamp('&MODULE', '&FILE_NAME', ('Timestamp_'||sub_section_));
   IF NOT (Db_Script_Register_Detail_API.Is_Sub_Section_Registered('&MODULE', '&PATCH_ID', sub_section_)) THEN
      
      DECLARE
         stmt_            VARCHAR2(32000);
         columns_         Database_SYS.ColumnTabType;
         table_name_      VARCHAR2(30) := '&MV';
         index_name_      VARCHAR2(30);
         constraint_name_ VARCHAR2(30);
      BEGIN
         dbms_output.put_line('Primary key cascade drop ON &MV');
         Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

         dbms_output.put_line('Drop Materialized View &MV');
         Database_SYS.Remove_Materialized_View('&MV', TRUE);

         dbms_output.put_line('Create Materialized View &MV');
         stmt_ :=
            'CREATE MATERIALIZED VIEW &MV
             TABLESPACE &IFSAPP_DATA
             BUILD DEFERRED
             USING NO INDEX
             REFRESH COMPLETE ON DEMAND
             AS
             SELECT a.company||''^''||a.code_part_value id,
                    a.company                           company,
                    a.code_part_value                   code,
                    a.attribute                         attribute,
                    a2.description                      attribute_description,
                    a.attribute_value                   attribute_value,
                    a3.description                      attribute_value_description
             FROM   ACCOUNTING_ATTRIBUTE_CON_TAB a,
         ACCOUNTING_ATTRIBUTE_TAB a2,
         ACCOUNTING_ATTRIBUTE_VALUE_TAB a3
             WHERE a.code_part        = ''&CODE_PART''
         AND    a2.company         = a.company
         AND    a2.attribute       = a.attribute
         AND    a3.company         = a.company
         AND    a3.attribute       = a.attribute
         AND    a3.attribute_value = a.attribute_value       
             ';
         EXECUTE IMMEDIATE stmt_;
      END;

      
      Db_Script_Register_Detail_API.Register_Sub_Section(
         '&MODULE', 
         '&PATCH_ID',
         sub_section_,
         'TRUE',
         file_name_ => '&FILE_NAME');
   END IF;   
EXCEPTION
   WHEN OTHERS THEN
      string_ := 'Oratext is: '|| SQLERRM||' >>>';
      Db_Script_Register_Detail_API.Register_Sub_Section(
         '&MODULE', 
         '&PATCH_ID',
         sub_section_,
         'FALSE',
         string_,
         '&FILE_NAME');
      RAISE;
END;
/
--------------------------------------------------------------
----------Create constraints and index(s) on Materialized VIEW
--------------------------------------------------------------

PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   sub_section_  NUMBER:=1005;
   string_       VARCHAR2(4000);
BEGIN
   Installation_SYS.Log_Detail_Time_Stamp('&MODULE', '&FILE_NAME', ('Timestamp_'||sub_section_));
   IF NOT (Db_Script_Register_Detail_API.Is_Sub_Section_Registered('&MODULE', '&PATCH_ID', sub_section_)) THEN
      DECLARE
         columns_         Database_SYS.ColumnTabType;
         table_name_      VARCHAR2(30) := '&MV';
         index_name_      VARCHAR2(30);
         constraint_name_ VARCHAR2(30);
      BEGIN
         constraint_name_ := table_name_ || '_PK';
         Database_SYS.Set_Table_Column (columns_ , 'ID');
         Database_Sys.Create_Constraint(table_name_,
                                        constraint_name_,
                                        columns_,
                                        'P',
                                        '&IFSAPP_INDEX',
                                        NULL,
                                        TRUE,
                                        TRUE);

         Installation_SYS.Reset_Column_Table(columns_);
      END;   
   END IF;    
EXCEPTION
   WHEN OTHERS THEN
      string_ := 'Oratext is: '|| SQLERRM||' >>>';
      Db_Script_Register_Detail_API.Register_Sub_Section(
         '&MODULE', 
         '&PATCH_ID',
         sub_section_,
         'FALSE',
         string_,
         '&FILE_NAME');
      RAISE;
END;
/
UNDEFINE MV
UNDEFINE TAB1
UNDEFINE TAB2

---------------------------------------------------------------------
-- CREATE ANALYTIC_ATTR_CODE_B_MV
---------------------------------------------------------------------
DEFINE MV         = ANALYTIC_ATTR_CODE_B_MV
DEFINE TAB1       = ANALYTIC_ATTR_CODE_B_TAB
DEFINE TAB2       = COMPANY_FINANCE_TAB
DEFINE CODE_PART  = B

PROMPT Create Materialized View ANALYTIC_ATTR_CODE_B_MV
DECLARE
   sub_section_  NUMBER:=1006;
   string_       VARCHAR2(4000);
BEGIN
   Installation_SYS.Log_Detail_Time_Stamp('&MODULE', '&FILE_NAME', ('Timestamp_'||sub_section_));
   IF NOT (Db_Script_Register_Detail_API.Is_Sub_Section_Registered('&MODULE', '&PATCH_ID', sub_section_)) THEN      
      DECLARE
         stmt_            VARCHAR2(32000);
         columns_         Database_SYS.ColumnTabType;
         table_name_      VARCHAR2(30) := '&MV';
         index_name_      VARCHAR2(30);
         constraint_name_ VARCHAR2(30);
      BEGIN
         dbms_output.put_line('Primary key cascade drop ON &MV');
         Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

         dbms_output.put_line('Drop Materialized View &MV');
         Database_SYS.Remove_Materialized_View('&MV', TRUE);

         dbms_output.put_line('Create Materialized View &MV');
         stmt_ :=
            'CREATE MATERIALIZED VIEW &MV
             TABLESPACE &IFSAPP_DATA
             BUILD DEFERRED
             USING NO INDEX
             REFRESH COMPLETE ON DEMAND
             AS
             SELECT a.company||''^''||a.code_part_value id,
                    a.company                           company,
                    a.code_part_value                   code,
                    a.attribute                         attribute,
                    a2.description                      attribute_description,
                    a.attribute_value                   attribute_value,
                    a3.description                      attribute_value_description
             FROM   ACCOUNTING_ATTRIBUTE_CON_TAB a,
         ACCOUNTING_ATTRIBUTE_TAB a2,
         ACCOUNTING_ATTRIBUTE_VALUE_TAB a3
             WHERE  a.code_part        = ''&CODE_PART''
         AND    a2.company         = a.company
         AND    a2.attribute       = a.attribute
         AND    a3.company         = a.company
         AND    a3.attribute       = a.attribute
         AND    a3.attribute_value = a.attribute_value       
             ';
         EXECUTE IMMEDIATE stmt_;
      END;      
      Db_Script_Register_Detail_API.Register_Sub_Section(
         '&MODULE', 
         '&PATCH_ID',
         sub_section_,
         'TRUE',
         file_name_ => '&FILE_NAME');
   END IF;   
EXCEPTION
   WHEN OTHERS THEN
      string_ := 'Oratext is: '|| SQLERRM||' >>>';
      Db_Script_Register_Detail_API.Register_Sub_Section(
         '&MODULE', 
         '&PATCH_ID',
         sub_section_,
         'FALSE',
         string_,
         '&FILE_NAME');
      RAISE;
END;
/
--------------------------------------------------------------
----------Create constraints and index(s) on Materialized VIEW
--------------------------------------------------------------

PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   sub_section_  NUMBER:=1007;
   string_       VARCHAR2(4000);
BEGIN
   Installation_SYS.Log_Detail_Time_Stamp('&MODULE', '&FILE_NAME', ('Timestamp_'||sub_section_));
   IF NOT (Db_Script_Register_Detail_API.Is_Sub_Section_Registered('&MODULE', '&PATCH_ID', sub_section_)) THEN
      DECLARE
         columns_         Database_SYS.ColumnTabType;
         table_name_      VARCHAR2(30) := '&MV';
         index_name_      VARCHAR2(30);
         constraint_name_ VARCHAR2(30);
      BEGIN
         constraint_name_ := table_name_ || '_PK';
         Database_SYS.Set_Table_Column (columns_ , 'ID');
         Database_Sys.Create_Constraint(table_name_,
                                        constraint_name_,
                                        columns_,
                                        'P',
                                        '&IFSAPP_INDEX',
                                        NULL,
                                        TRUE,
                                        TRUE);

         Installation_SYS.Reset_Column_Table(columns_);
      END;   
   END IF;    
EXCEPTION
   WHEN OTHERS THEN
      string_ := 'Oratext is: '|| SQLERRM||' >>>';
      Db_Script_Register_Detail_API.Register_Sub_Section(
         '&MODULE', 
         '&PATCH_ID',
         sub_section_,
         'FALSE',
         string_,
         '&FILE_NAME');
      RAISE;
END;
/
UNDEFINE MV
UNDEFINE TAB1
UNDEFINE TAB2
UNDEFINE CODE_PART

---------------------------------------------------------------------
-- CREATE ANALYTIC_ATTR_CODE_C_MV
---------------------------------------------------------------------
DEFINE MV         = ANALYTIC_ATTR_CODE_C_MV
DEFINE TAB1       = ANALYTIC_ATTR_CODE_C_TAB
DEFINE TAB2       = COMPANY_FINANCE_TAB
DEFINE CODE_PART  = C

PROMPT Create Materialized View ANALYTIC_ATTR_CODE_C_MV
DECLARE
   sub_section_  NUMBER:=1008;
   string_       VARCHAR2(4000);
BEGIN
   Installation_SYS.Log_Detail_Time_Stamp('&MODULE', '&FILE_NAME', ('Timestamp_'||sub_section_));
   IF NOT (Db_Script_Register_Detail_API.Is_Sub_Section_Registered('&MODULE', '&PATCH_ID', sub_section_)) THEN      
      DECLARE
         stmt_            VARCHAR2(32000);
         columns_         Database_SYS.ColumnTabType;
         table_name_      VARCHAR2(30) := '&MV';
         index_name_      VARCHAR2(30);
         constraint_name_ VARCHAR2(30);
      BEGIN
         dbms_output.put_line('Primary key cascade drop ON &MV');
         Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

         dbms_output.put_line('Drop Materialized View &MV');
         Database_SYS.Remove_Materialized_View('&MV', TRUE);

         dbms_output.put_line('Create Materialized View &MV');
         stmt_ :=
            'CREATE MATERIALIZED VIEW &MV
             TABLESPACE &IFSAPP_DATA
             BUILD DEFERRED
             USING NO INDEX
             REFRESH COMPLETE ON DEMAND
             AS
             SELECT a.company||''^''||a.code_part_value id,
                    a.company                           company,
                    a.code_part_value                   code,
                    a.attribute                         attribute,
                    a2.description                      attribute_description,
                    a.attribute_value                   attribute_value,
                    a3.description                      attribute_value_description
             FROM   ACCOUNTING_ATTRIBUTE_CON_TAB a,
         ACCOUNTING_ATTRIBUTE_TAB a2,
         ACCOUNTING_ATTRIBUTE_VALUE_TAB a3
             WHERE a.code_part        = ''&CODE_PART''
            AND    a2.company         = a.company
            AND    a2.attribute       = a.attribute
            AND    a3.company         = a.company
            AND    a3.attribute       = a.attribute
            AND    a3.attribute_value = a.attribute_value 
             ';
         EXECUTE IMMEDIATE stmt_;
      END;      
      Db_Script_Register_Detail_API.Register_Sub_Section(
         '&MODULE', 
         '&PATCH_ID',
         sub_section_,
         'TRUE',
         file_name_ => '&FILE_NAME');
   END IF;   
EXCEPTION
   WHEN OTHERS THEN
      string_ := 'Oratext is: '|| SQLERRM||' >>>';
      Db_Script_Register_Detail_API.Register_Sub_Section(
         '&MODULE', 
         '&PATCH_ID',
         sub_section_,
         'FALSE',
         string_,
         '&FILE_NAME');
      RAISE;
END;
/
--------------------------------------------------------------
----------Create constraints and index(s) on Materialized VIEW
--------------------------------------------------------------

PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   sub_section_  NUMBER:=1009;
   string_       VARCHAR2(4000);
BEGIN
   Installation_SYS.Log_Detail_Time_Stamp('&MODULE', '&FILE_NAME', ('Timestamp_'||sub_section_));
   IF NOT (Db_Script_Register_Detail_API.Is_Sub_Section_Registered('&MODULE', '&PATCH_ID', sub_section_)) THEN
      DECLARE
         columns_         Database_SYS.ColumnTabType;
         table_name_      VARCHAR2(30) := '&MV';
         index_name_      VARCHAR2(30);
         constraint_name_ VARCHAR2(30);
      BEGIN
         constraint_name_ := table_name_ || '_PK';
         Database_SYS.Set_Table_Column (columns_ , 'ID');
         Database_Sys.Create_Constraint(table_name_,
                                        constraint_name_,
                                        columns_,
                                        'P',
                                        '&IFSAPP_INDEX',
                                        NULL,
                                        TRUE,
                                        TRUE);

         Installation_SYS.Reset_Column_Table(columns_);
      END;   
   END IF;    
EXCEPTION
   WHEN OTHERS THEN
      string_ := 'Oratext is: '|| SQLERRM||' >>>';
      Db_Script_Register_Detail_API.Register_Sub_Section(
         '&MODULE', 
         '&PATCH_ID',
         sub_section_,
         'FALSE',
         string_,
         '&FILE_NAME');
      RAISE;
END;
/
UNDEFINE MV
UNDEFINE TAB1
UNDEFINE TAB2
UNDEFINE CODE_PART

---------------------------------------------------------------------
-- CREATE ANALYTIC_ATTR_CODE_D_MV
---------------------------------------------------------------------
DEFINE MV         = ANALYTIC_ATTR_CODE_D_MV
DEFINE TAB1       = ANALYTIC_ATTR_CODE_D_TAB
DEFINE TAB2       = COMPANY_FINANCE_TAB
DEFINE CODE_PART  = D

PROMPT Create Materialized View ANALYTIC_ATTR_CODE_D_MV
DECLARE
   sub_section_  NUMBER:=1010;
   string_       VARCHAR2(4000);
BEGIN
   Installation_SYS.Log_Detail_Time_Stamp('&MODULE', '&FILE_NAME', ('Timestamp_'||sub_section_));
   IF NOT (Db_Script_Register_Detail_API.Is_Sub_Section_Registered('&MODULE', '&PATCH_ID', sub_section_)) THEN      
      DECLARE
         stmt_            VARCHAR2(32000);
         columns_         Database_SYS.ColumnTabType;
         table_name_      VARCHAR2(30) := '&MV';
         index_name_      VARCHAR2(30);
         constraint_name_ VARCHAR2(30);
      BEGIN
         dbms_output.put_line('Primary key cascade drop ON &MV');
         Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

         dbms_output.put_line('Drop Materialized View &MV');
         Database_SYS.Remove_Materialized_View('&MV', TRUE);

         dbms_output.put_line('Create Materialized View &MV');
         stmt_ :=
            'CREATE MATERIALIZED VIEW &MV
             TABLESPACE &IFSAPP_DATA
             BUILD DEFERRED
             USING NO INDEX
             REFRESH COMPLETE ON DEMAND
             AS
             SELECT a.company||''^''||a.code_part_value id,
                    a.company                           company,
                    a.code_part_value                   code,
                    a.attribute                         attribute,
                    a2.description                      attribute_description,
                    a.attribute_value                   attribute_value,
                    a3.description                      attribute_value_description
             FROM   ACCOUNTING_ATTRIBUTE_CON_TAB a,
         ACCOUNTING_ATTRIBUTE_TAB a2,
         ACCOUNTING_ATTRIBUTE_VALUE_TAB a3
             WHERE a.code_part        = ''&CODE_PART''
         AND    a2.company         = a.company
         AND    a2.attribute       = a.attribute
         AND    a3.company         = a.company
         AND    a3.attribute       = a.attribute
         AND    a3.attribute_value = a.attribute_value       
             ';
         EXECUTE IMMEDIATE stmt_;
      END;      
      Db_Script_Register_Detail_API.Register_Sub_Section(
         '&MODULE', 
         '&PATCH_ID',
         sub_section_,
         'TRUE',
         file_name_ => '&FILE_NAME');
   END IF;   
EXCEPTION
   WHEN OTHERS THEN
      string_ := 'Oratext is: '|| SQLERRM||' >>>';
      Db_Script_Register_Detail_API.Register_Sub_Section(
         '&MODULE', 
         '&PATCH_ID',
         sub_section_,
         'FALSE',
         string_,
         '&FILE_NAME');
      RAISE;
END;
/
--------------------------------------------------------------
----------Create constraints and index(s) on Materialized VIEW
--------------------------------------------------------------

PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   sub_section_  NUMBER:=1011;
   string_       VARCHAR2(4000);
BEGIN
   Installation_SYS.Log_Detail_Time_Stamp('&MODULE', '&FILE_NAME', ('Timestamp_'||sub_section_));
   IF NOT (Db_Script_Register_Detail_API.Is_Sub_Section_Registered('&MODULE', '&PATCH_ID', sub_section_)) THEN
      DECLARE
         columns_         Database_SYS.ColumnTabType;
         table_name_      VARCHAR2(30) := '&MV';
         index_name_      VARCHAR2(30);
         constraint_name_ VARCHAR2(30);
      BEGIN
         constraint_name_ := table_name_ || '_PK';
         Database_SYS.Set_Table_Column (columns_ , 'ID');
         Database_Sys.Create_Constraint(table_name_,
                                        constraint_name_,
                                        columns_,
                                        'P',
                                        '&IFSAPP_INDEX',
                                        NULL,
                                        TRUE,
                                        TRUE);

         Installation_SYS.Reset_Column_Table(columns_);
      END;   
   END IF;    
EXCEPTION
   WHEN OTHERS THEN
      string_ := 'Oratext is: '|| SQLERRM||' >>>';
      Db_Script_Register_Detail_API.Register_Sub_Section(
         '&MODULE', 
         '&PATCH_ID',
         sub_section_,
         'FALSE',
         string_,
         '&FILE_NAME');
      RAISE;
END;
/
UNDEFINE MV
UNDEFINE TAB1
UNDEFINE TAB2
UNDEFINE CODE_PART

---------------------------------------------------------------------
-- CREATE CURRENCY_RATE_MV
---------------------------------------------------------------------

DEFINE TAB    = CURRENCY_RATE_TAB
DEFINE MV     = CURRENCY_RATE_MV
DEFINE MODULE = ACCRUL

-------------------------------------------------------------------

PROMPT ********* Component &MODULE, definition begins ***********
DECLARE
   sub_section_  NUMBER:=1012;
   string_       VARCHAR2(4000);
BEGIN   
   Installation_SYS.Log_Detail_Time_Stamp('&MODULE', '&FILE_NAME', ('Timestamp_'||sub_section_));
   IF NOT (Db_Script_Register_Detail_API.Is_Sub_Section_Registered('&MODULE', '&PATCH_ID', sub_section_)) THEN 
      DECLARE
         stmt_                    VARCHAR2(32000);
         columns_                 Database_SYS.ColumnTabType;
         table_name_              VARCHAR2(30) := '&MV';
         index_name_              VARCHAR2(30);
         constraint_name_         VARCHAR2(30);
      BEGIN

         dbms_output.put_line('Primary key cascade drop ON &MV');
         Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

         dbms_output.put_line('Drop Materialized View &MV');
         Database_SYS.Remove_Materialized_View('&MV', TRUE);

         dbms_output.put_line('Create Materialized View &MV');
         stmt_ :=
         'CREATE MATERIALIZED VIEW &MV
          TABLESPACE &IFSAPP_DATA
          BUILD DEFERRED
          USING INDEX TABLESPACE &IFSAPP_INDEX
          REFRESH COMPLETE ON DEMAND
          AS
          SELECT cr.company_key||''^''||TO_CHAR(cr.valid_from_key,''YYYY-MM-DD'')||''^''||TO_CHAR(cr.currency_rate_type_key)||''^''||cr.currency_code_key id,
                 cr.company_key                                                                                                                           company_key,
                 cr.valid_from_key                                                                                                                        valid_from_key,
                 cr.currency_rate_type_key                                                                                                                currency_rate_type_key,
                 cr.currency_code_key                                                                                                                     currency_code_key,
                 cr.currency_rate                                                                                                                         currency_rate,
                 cr.direct_currency_rate                                                                                                                  direct_currency_rate,
                 cr.direct_currency_rate_round                                                                                                            direct_currency_rate_round,
                 cr.valid_from                                                                                                                            valid_from,
                 cr.valid_until                                                                                                                           valid_until,
                 cr.is_max_valid_from                                                                                                                     is_max_valid_from,
                 cr.dim_company_id                                                                                                                        dim_company_id,
                 cr.dim_currency_code_id                                                                                                                  dim_currency_code_id,
                 cr.dim_currency_rate_type_id                                                                                                             dim_currency_rate_type_id,
                 cr.currency_code                                                                                                                         currency_code,
                 cr.currency_type                                                                                                                         currency_type
          FROM currency_rate_mv_hlp cr';

         EXECUTE IMMEDIATE stmt_;

         /*
         ----------------------------------------------------------------------------------
         Template section for creation of indexes on a fact based MV.
         It is suggested to create one primary key (or maybe unique) contraint on the key
         columns. It is also suggested to create indexes on dimension identity columns for
         the most commonly used dimensions. Indexes with combination of id columns are
         preferred compared to adding single id column indexes.
         ----------------------------------------------------------------------------------
         */
         dbms_output.put_line('Create constraints and indexes on Materialized View &MV');

         constraint_name_ := table_name_ || '_PK';
         Database_SYS.Set_Table_Column (columns_ , 'company_key');
         Database_SYS.Set_Table_Column (columns_ , 'valid_from_key');
         Database_SYS.Set_Table_Column (columns_ , 'currency_rate_type_key');
         Database_SYS.Set_Table_Column (columns_ , 'currency_code_key');
         Database_Sys.Create_Constraint(table_name_,
                                        constraint_name_,
                                        columns_,
                                        'P',
                                        '&IFSAPP_INDEX',
                                        NULL,
                                        TRUE,
                                        TRUE);
         Installation_SYS.Reset_Column_Table(columns_);

         index_name_ := table_name_||'_IX1';
         Database_SYS.Set_Table_Column (columns_ , 'dim_company_id');
         Database_SYS.Create_Index ( table_name_,
                                     index_name_,
                                     columns_,
                                     'N',
                                     '&IFSAPP_INDEX',
                                     NULL,
                                     TRUE,
                                     TRUE);
         Installation_SYS.Reset_Column_Table(columns_);

         index_name_ := table_name_||'_IX2';
         Database_SYS.Set_Table_Column (columns_ , 'dim_company_id');
         Database_SYS.Set_Table_Column (columns_ , 'dim_currency_code_id');
         Database_SYS.Set_Table_Column (columns_ , 'dim_currency_rate_type_id');
         Database_SYS.Create_Index ( table_name_,
                                     index_name_,
                                     columns_,
                                     'N',
                                     '&IFSAPP_INDEX',
                                     NULL,
                                     TRUE,
                                     TRUE);

      EXCEPTION
         WHEN OTHERS THEN
         dbms_output.put_line('Error when creating MV &MV');
         dbms_output.put_line(SQLERRM);
      END;
      
      Db_Script_Register_Detail_API.Register_Sub_Section(
         '&MODULE', 
         '&PATCH_ID',
         sub_section_,
         'TRUE',
         file_name_ => '&FILE_NAME');
   END IF;   
EXCEPTION
   WHEN OTHERS THEN
      string_ := 'Oratext is: '|| SQLERRM||' >>>';
      Db_Script_Register_Detail_API.Register_Sub_Section(
         '&MODULE', 
         '&PATCH_ID',
         sub_section_,
         'FALSE',
         string_,
         '&FILE_NAME');
      RAISE;
END;
/

--------------------------------------------------------------
--  Creating ACCOUNTING_PERIOD_MV
--------------------------------------------------------------

DEFINE MV         = ACCOUNTING_PERIOD_MV
DEFINE TAB1       = ACCOUNTING_PERIOD_TAB
DEFINE TAB2       = COMPANY_FINANCE_TAB

PROMPT Create Materialized View &MV
DECLARE
   sub_section_  NUMBER:=1013;
   string_       VARCHAR2(4000);
BEGIN
   Installation_SYS.Log_Detail_Time_Stamp('&MODULE', '&FILE_NAME', ('Timestamp_'||sub_section_));
   IF NOT (Db_Script_Register_Detail_API.Is_Sub_Section_Registered('&MODULE', '&PATCH_ID', sub_section_)) THEN
      
      DECLARE
         stmt_            VARCHAR2(32000);
         columns_         Database_SYS.ColumnTabType;
         table_name_      VARCHAR2(30) := '&MV';
         index_name_      VARCHAR2(30);
         constraint_name_ VARCHAR2(30);
      BEGIN
         dbms_output.put_line('Primary key cascade drop ON &MV');
         Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

         dbms_output.put_line('Drop Materialized View &MV');
         Database_SYS.Remove_Materialized_View('&MV', TRUE);

         dbms_output.put_line('Create Materialized View &MV');
         stmt_ :=
            'CREATE MATERIALIZED VIEW &MV
             TABLESPACE &IFSAPP_DATA
             BUILD DEFERRED
             USING NO INDEX
             REFRESH COMPLETE ON DEMAND
             AS
             SELECT b.company                    ||''^''||
                    TO_CHAR(b.accounting_year)||''^''||
                    TO_CHAR(b.accounting_period)                                                          id,
                    a.company                                                                             company,
                    TO_CHAR(b.accounting_year)||  TO_CHAR(b.accounting_period,''FM00'')                   code,
                    b.description                                                                         description,
                    b.date_from                                                                           start_date,
                    b.date_until                                                                          end_date,
                    b.consolidated                                                                        consolidated,
                    a.year_status                                                                         year_status,
                    b.period_status                                                                       period_status,
                    b.period_status_int                                                                   period_status_il,
                    b.year_end_period                                                                     period_type,
                    a.accounting_year                                                                     accounting_year,
                    b.accounting_period                                                                   accounting_period,
                    a.opening_balances                                                                    opening_balances,
                    a.closing_balances                                                                    closing_balances,
                    a.open_bal_consolidated                                                               open_balances_consolidated,
                    b.report_from_date                                                                    report_from_date,
                    b.report_until_date                                                                   report_until_date
             FROM   ACCOUNTING_YEAR_TAB a, ACCOUNTING_PERIOD_TAB b
             WHERE b.accounting_year = a.accounting_year AND b.company = a.company       
             UNION ALL
             SELECT company||''^''||''#''                                                               id,
                    company                                                                             company,
                    NULL                                                                                  code,
                    NULL                                                                                  description,
                    NULL                                                                                  start_date,
                    NULL                                                                                  end_date,
                    NULL                                                                                  consolidated,
                    NULL                                                                                  year_status,
                    NULL                                                                                  period_status,
                    NULL                                                                                  period_status_il,
                    NULL                                                                                  period_type,
                    NULL                                                                                  accounting_year,
                    NULL                                                                                  accounting_period,
                    NULL                                                                                  opening_balances,
                    NULL                                                                                  closing_balances,
                    NULL                                                                                  open_balances_consolidated,
                    NULL                                                                                  report_from_date,
                    NULL                                                                                  report_until_date
             FROM   &TAB2
             UNION ALL
             SELECT ''#''||''^''||''#''                                                                       id,
                    NULL                                                                                      company,
                    NULL                                                                                      code,
                    NULL                                                                                      description,
                    NULL                                                                                      start_date,
                    NULL                                                                                      end_date,
                    NULL                                                                                      consolidated,
                    NULL                                                                                      year_status,
                    NULL                                                                                      period_status,
                    NULL                                                                                      period_status_il,
                    NULL                                                                                      period_type,
                    NULL                                                                                      accounting_year,
                    NULL                                                                                      accounting_period,
                    NULL                                                                                      opening_balances,
                    NULL                                                                                      closing_balances,
                    NULL                                                                                      open_balances_consolidated,
                    NULL                                                                                      report_from_date,
                    NULL                                                                                      report_until_date
             FROM BI_DUAL_TAB
             ';
         EXECUTE IMMEDIATE stmt_;
      END;
      
      Db_Script_Register_Detail_API.Register_Sub_Section(
         '&MODULE', 
         '&PATCH_ID',
         sub_section_,
         'TRUE',
         file_name_ => '&FILE_NAME');
   END IF;   
EXCEPTION
   WHEN OTHERS THEN
      string_ := 'Oratext is: '|| SQLERRM||' >>>';
      Db_Script_Register_Detail_API.Register_Sub_Section(
         '&MODULE', 
         '&PATCH_ID',
         sub_section_,
         'FALSE',
         string_,
         '&FILE_NAME');
      RAISE;
END;
/

PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   sub_section_  NUMBER:=1014;
   string_       VARCHAR2(4000);
BEGIN
   Installation_SYS.Log_Detail_Time_Stamp('&MODULE', '&FILE_NAME', ('Timestamp_'||sub_section_));
   IF NOT (Db_Script_Register_Detail_API.Is_Sub_Section_Registered('&MODULE', '&PATCH_ID', sub_section_)) THEN 
      DECLARE
         columns_         Database_SYS.ColumnTabType;
         table_name_      VARCHAR2(30) := '&MV';
         index_name_      VARCHAR2(30);
         constraint_name_ VARCHAR2(30);
      BEGIN  
         constraint_name_ := table_name_ || '_PK';
         Database_SYS.Set_Table_Column (columns_ , 'ID');
         Database_Sys.Create_Constraint(table_name_,
                                        constraint_name_,
                                        columns_,
                                        'P',
                                        '&IFSAPP_INDEX',
                                        NULL,
                                        TRUE,
                                        TRUE);

         Installation_SYS.Reset_Column_Table(columns_);

         index_name_ := table_name_||'_UX1';
         Database_SYS.Set_Table_Column (columns_ , 'COMPANY');     
         Database_SYS.Set_Table_Column (columns_ , 'CODE');
         Database_SYS.Create_Index ( table_name_,
                                     index_name_,
                                     columns_,
                                     'U',
                                     '&IFSAPP_INDEX',
                                     NULL,
                                     TRUE,
                                     TRUE);

         Installation_SYS.Reset_Column_Table(columns_);

         index_name_ := table_name_||'_UX2';
         Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
         Database_SYS.Set_Table_Column (columns_ , 'ACCOUNTING_YEAR');
         Database_SYS.Set_Table_Column (columns_ , 'ACCOUNTING_PERIOD');
         Database_SYS.Create_Index ( table_name_,
                                     index_name_,
                                     columns_,
                                     'U',
                                     '&IFSAPP_INDEX',
                                     NULL,
                                     TRUE,
                                     TRUE);

         Installation_SYS.Reset_Column_Table(columns_);

         index_name_ := table_name_||'_IX1';
         Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
         Database_SYS.Set_Table_Column (columns_ , 'ACCOUNTING_PERIOD');
         Database_SYS.Create_Index ( table_name_,
                                     index_name_,
                                     columns_,
                                     'N',
                                     '&IFSAPP_INDEX',
                                     NULL,
                                     TRUE,
                                     TRUE);
      END;
      
      Db_Script_Register_Detail_API.Register_Sub_Section(
         '&MODULE', 
         '&PATCH_ID',
         sub_section_,
         'TRUE',
         file_name_ => '&FILE_NAME');
   END IF;   
EXCEPTION
   WHEN OTHERS THEN
      string_ := 'Oratext is: '|| SQLERRM||' >>>';
      Db_Script_Register_Detail_API.Register_Sub_Section(
         '&MODULE', 
         '&PATCH_ID',
         sub_section_,
         'FALSE',
         string_,
         '&FILE_NAME');
      RAISE;
END;
/

UNDEFINE MV
UNDEFINE TAB1
UNDEFINE TAB2

--------------------------------------------------------------
--  Creating TAXCODE_MV
--------------------------------------------------------------

DEFINE MV         = TAXCODE_MV
DEFINE TAB1       = STATUTORY_FEE_TAB
DEFINE TAB2       = COMPANY_FINANCE_TAB

PROMPT Create Materialized View &MV
DECLARE
   sub_section_  NUMBER:=1015;
   string_       VARCHAR2(4000);
BEGIN
   Installation_SYS.Log_Detail_Time_Stamp('&MODULE', '&FILE_NAME', ('Timestamp_'||sub_section_));
   IF NOT (Db_Script_Register_Detail_API.Is_Sub_Section_Registered('&MODULE', '&PATCH_ID', sub_section_)) THEN
      
      DECLARE
         stmt_            VARCHAR2(32000);
         columns_         Database_SYS.ColumnTabType;
         table_name_      VARCHAR2(30) := '&MV';
         index_name_      VARCHAR2(30);
         constraint_name_ VARCHAR2(30);
      BEGIN
         dbms_output.put_line('Primary key cascade drop ON &MV');
         Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

         dbms_output.put_line('Drop Materialized View &MV');
         Database_SYS.Remove_Materialized_View('&MV', TRUE);

         dbms_output.put_line('Create Materialized View &MV');
         stmt_ :=
            'CREATE MATERIALIZED VIEW &MV
             TABLESPACE &IFSAPP_DATA
             BUILD DEFERRED
             USING NO INDEX
             REFRESH COMPLETE ON DEMAND
             AS
             SELECT a.company||''^''||a.fee_code id,
                    a.company                    company,
                    a.fee_code                   code,
                    ''Null''                     description,
                    a.fee_rate                   fee_rate,
                    a.valid_from                 valid_from,
                    a.valid_until                valid_until,
                    a.fee_type                   fee_type,
                    a.vat_received               vat_received,
                    a.vat_disbursed              vat_disbursed,
                    a.deductible                 deductible,
                    a.multiple_tax               multiple_tax,
                    a.amount_not_taxable         amount_not_taxable,
                    a.min_withheld_amount        min_withheld_amount,
                    a.tax_amount_at_inv_print    tax_amount_at_inv_print,
                    a.tax_amt_limit              tax_amt_limit,
                    a.minimum_base_amount        minimum_base_amount
             FROM   &TAB1 a       
             UNION ALL
             SELECT company||''^''||''#''        id,
                    company                      company,
                    NULL                         code,
                    NULL                         description,
                    NULL                         fee_rate,
                    NULL                         valid_from,
                    NULL                         valid_until,
                    NULL                         fee_type,
                    NULL                         vat_received,
                    NULL                         vat_disbursed,
                    NULL                         deductible,
                    NULL                         multiple_tax,
                    NULL                         amount_not_taxable,
                    NULL                         min_withheld_amount,
                    NULL                         tax_amount_at_inv_print,
                    NULL                         tax_amt_limit,
                    NULL                         minimum_base_amount
             FROM   &TAB2
             UNION ALL
             SELECT ''#''||''^''||''#''          id,
                    NULL                         company,
                    NULL                         code,
                    NULL                         description,
                    NULL                         fee_rate,
                    NULL                         valid_from,
                    NULL                         valid_until,
                    NULL                         fee_type,
                    NULL                         vat_received,
                    NULL                         vat_disbursed,
                    NULL                         deductible,
                    NULL                         multiple_tax,
                    NULL                         amount_not_taxable,
                    NULL                         min_withheld_amount,
                    NULL                         tax_amount_at_inv_print,
                    NULL                         tax_amt_limit,
                    NULL                         minimum_base_amount
             FROM BI_DUAL_TAB
             ';
         EXECUTE IMMEDIATE stmt_;
         
         dbms_output.put_line('Create constraint and index(s) on Materialized View &MV');
       
         constraint_name_ := table_name_||'_PK';                                  
         Database_SYS.Set_Table_Column (columns_ , 'ID');
         Database_SYS.Create_Constraint ( table_name_,
                                     constraint_name_,
                                     columns_,
                                     'P',
                                     '&IFSAPP_INDEX',
                                      NULL,
                                      TRUE,
                                      TRUE);

         Installation_SYS.Reset_Column_Table(columns_);

         index_name_ := table_name_||'_UX1';
         Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
         Database_SYS.Set_Table_Column (columns_ , 'CODE');
         Database_SYS.Create_Index ( table_name_,
                                     index_name_,
                                     columns_,
                                     'U',
                                     '&IFSAPP_INDEX',
                                     NULL,
                                     TRUE,
                                     TRUE);
      END;
      
      Db_Script_Register_Detail_API.Register_Sub_Section(
         '&MODULE', 
         '&PATCH_ID',
         sub_section_,
         'TRUE',
         file_name_ => '&FILE_NAME');
   END IF;   
EXCEPTION
   WHEN OTHERS THEN
      string_ := 'Oratext is: '|| SQLERRM||' >>>';
      Db_Script_Register_Detail_API.Register_Sub_Section(
         '&MODULE', 
         '&PATCH_ID',
         sub_section_,
         'FALSE',
         string_,
         '&FILE_NAME');
      RAISE;
END;
/

---------------------------------------------------------------------------------------
--  ACCOUNT_MV
---------------------------------------------------------------------------------------

DEFINE MV         = ACCOUNT_MV
DEFINE TAB1       = ACCOUNTING_CODE_PART_VALUE_TAB
DEFINE TAB2       = COMPANY_FINANCE_TAB

PROMPT Create Materialized View &MV
DECLARE
   sub_section_  NUMBER:=1016;
   string_       VARCHAR2(4000);
BEGIN
   Installation_SYS.Log_Detail_Time_Stamp('&MODULE', '&FILE_NAME', ('Timestamp_'||sub_section_));
   IF NOT (Db_Script_Register_Detail_API.Is_Sub_Section_Registered('&MODULE', '&PATCH_ID', sub_section_)) THEN  
      DECLARE
         stmt_            VARCHAR2(32000);
         columns_         Database_SYS.ColumnTabType;
         table_name_      VARCHAR2(30) := '&MV';
         index_name_      VARCHAR2(30);
         constraint_name_ VARCHAR2(30);
      BEGIN
         dbms_output.put_line('Primary key cascade drop ON &MV');
         Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

         dbms_output.put_line('Drop Materialized View &MV');
         Database_SYS.Remove_Materialized_View('&MV', TRUE);

         dbms_output.put_line('Create Materialized View &MV');
         stmt_ :=
            'CREATE MATERIALIZED VIEW &MV
             TABLESPACE &IFSAPP_DATA
             BUILD DEFERRED
             USING NO INDEX
             REFRESH COMPLETE ON DEMAND
             AS
             SELECT a.company||''^''||a.code_part_value id,
                    a.company                           company,
                    a.code_part_value                   code,
                    ''Dummy''                           description,
                    a.accnt_group                       account_group,
                    b.description                       account_group_desc,
                    a.accnt_type                        account_type,
                    c.description                       account_type_desc,
                    a.valid_from                        valid_from,
                    a.valid_until                       valid_until,
                    a.logical_account_type              logical_account_type,
                    a.ledg_flag                         ledger_account,
                    a.curr_balance                      currency_balance,
                    a.bud_account                       budget_account_only,
                    a.tax_flag                          tax_account,
                    a.tax_handling_value                tax_handling,
                    a.exclude_from_curr_trans           exclude_from_curr_trans,
                    a.keep_rep_currency                 keep_rep_currency,
                    a.keep_reporting_entity             keep_reporting_entity
             FROM   ACCOUNTING_CODE_PART_VALUE_TAB a,
         ACCOUNT_GROUP_TAB b,
         ACCOUNT_TYPE_TAB c
             WHERE a.code_part   = ''A''
         AND    a.company     = b.company
         AND    a.accnt_group = b.accnt_group
         AND    a.company     = c.company
         AND    a.accnt_type  = c.user_defined_account_type       
             UNION ALL
             SELECT company||''^''||''#''               id,
                    company                             company,
                    NULL                                code,
                    NULL                                description,
                    NULL                                account_group,
                    NULL                                account_group_desc,
                    NULL                                account_type,
                    NULL                                account_type_desc,
                    NULL                                valid_from,
                    NULL                                valid_until,
                    NULL                                logical_account_type,
                    NULL                                ledger_account,
                    NULL                                currency_balance,
                    NULL                                budget_account_only,
                    NULL                                tax_account,
                    NULL                                tax_handling,
                    NULL                                exclude_from_curr_trans,
                    NULL                                keep_rep_currency,
                    NULL                                keep_reporting_entity
             FROM   &TAB2
             UNION ALL
             SELECT ''#''||''^''||''#''                 id,
                    NULL                                company,
                    NULL                                code,
                    NULL                                description,
                    NULL                                account_group,
                    NULL                                account_group_desc,
                    NULL                                account_type,
                    NULL                                account_type_desc,
                    NULL                                valid_from,
                    NULL                                valid_until,
                    NULL                                logical_account_type,
                    NULL                                ledger_account,
                    NULL                                currency_balance,
                    NULL                                budget_account_only,
                    NULL                                tax_account,
                    NULL                                tax_handling,
                    NULL                                exclude_from_curr_trans,
                    NULL                                keep_rep_currency,
                    NULL                                keep_reporting_entity
             FROM BI_DUAL_TAB
          ';
         EXECUTE IMMEDIATE stmt_;
      END;
      
      Db_Script_Register_Detail_API.Register_Sub_Section(
         '&MODULE', 
         '&PATCH_ID',
         sub_section_,
         'TRUE',
         file_name_ => '&FILE_NAME');
   END IF;   
EXCEPTION
   WHEN OTHERS THEN
      string_ := 'Oratext is: '|| SQLERRM||' >>>';
      Db_Script_Register_Detail_API.Register_Sub_Section(
         '&MODULE', 
         '&PATCH_ID',
         sub_section_,
         'FALSE',
         string_,
         '&FILE_NAME');
      RAISE;
END;
/

PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   sub_section_  NUMBER:=1017;
   string_       VARCHAR2(4000);
BEGIN
   Installation_SYS.Log_Detail_Time_Stamp('&MODULE', '&FILE_NAME', ('Timestamp_'||sub_section_));
   IF NOT (Db_Script_Register_Detail_API.Is_Sub_Section_Registered('&MODULE', '&PATCH_ID', sub_section_)) THEN   
      DECLARE
         columns_         Database_SYS.ColumnTabType;
         table_name_      VARCHAR2(30) := '&MV';
         index_name_      VARCHAR2(30);
         constraint_name_ VARCHAR2(30);
      BEGIN
         constraint_name_ := table_name_ || '_PK';
         Database_SYS.Set_Table_Column (columns_ , 'ID');
         Database_Sys.Create_Constraint(table_name_,
                                        constraint_name_,
                                        columns_,
                                        'P',
                                        '&IFSAPP_INDEX',
                                        NULL,
                                        TRUE,
                                        TRUE);

         Installation_SYS.Reset_Column_Table(columns_);

      END;
      
      Db_Script_Register_Detail_API.Register_Sub_Section(
         '&MODULE', 
         '&PATCH_ID',
         sub_section_,
         'TRUE',
         file_name_ => '&FILE_NAME');
   END IF;   
EXCEPTION
   WHEN OTHERS THEN
      string_ := 'Oratext is: '|| SQLERRM||' >>>';
      Db_Script_Register_Detail_API.Register_Sub_Section(
         '&MODULE', 
         '&PATCH_ID',
         sub_section_,
         'FALSE',
         string_,
         '&FILE_NAME');
      RAISE;
END;
/

UNDEFINE MV
UNDEFINE TAB1
UNDEFINE TAB2


---------------------------------------------------------------------------------------
-- Error Logging...
---------------------------------------------------------------------------------------
PROMPT Error LOGGING...
BEGIN
   Db_Script_Register_API.Log_Execution_Errors(
      '&MODULE',
      '&PATCH_ID');       
END;
/

SET SERVEROUTPUT OFF
PROMPT Ending &FILE_NAME
EXEC Installation_SYS.Log_Detail_Time_Stamp('&MODULE', '&FILE_NAME', 'Done');

UNDEFINE MODULE           
UNDEFINE PATCH_DATE       
UNDEFINE PATCH_ID         
UNDEFINE FILE_NAME
